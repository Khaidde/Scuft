/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scuft/lang/TestFile.scft":
/*!**************************************!*\
  !*** ./src/scuft/lang/TestFile.scft ***!
  \**************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"//This is our test file\\r\\n/*\\r\\nCreated by Kevin Khiddee-Wu and ONLY KKKelvin\\r\\n*/\\r\\na: num = 3_00_0.23_;\\r\\nfuncTest : (num, num) -> string = (a: num, b: num) -> string {\\r\\n    //c : num = a + b;\\r\\n    testNum1 = 4;\\r\\n    testNum2 : num = 5;\\r\\n    testNum_3: num;\\r\\n    // testString = \\\"hello\\\";\\r\\n\\r\\n    testNumError: num1 = 4;\\r\\n};\\r\\n_c_Stuff_with_underscores_ = 456.78;\\r\\n\\r\\n//Bugs\\r\\n/*\\r\\n- Check for trailing string/numeric literal token at the end of file\\r\\n- Check for new line in \\\"grabStringLiteral()\\\"\\r\\n*/\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL1Rlc3RGaWxlLnNjZnQ/OTY2MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsNkdBQTZHLGtFQUFrRSwwQkFBMEIscUJBQXFCLDJCQUEyQix1QkFBdUIsa0NBQWtDLG1DQUFtQyxNQUFNLHdDQUF3QyxzSkFBc0oiLCJmaWxlIjoiLi9zcmMvc2N1ZnQvbGFuZy9UZXN0RmlsZS5zY2Z0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIvL1RoaXMgaXMgb3VyIHRlc3QgZmlsZVxcclxcbi8qXFxyXFxuQ3JlYXRlZCBieSBLZXZpbiBLaGlkZGVlLVd1IGFuZCBPTkxZIEtLS2VsdmluXFxyXFxuKi9cXHJcXG5hOiBudW0gPSAzXzAwXzAuMjNfO1xcclxcbmZ1bmNUZXN0IDogKG51bSwgbnVtKSAtPiBzdHJpbmcgPSAoYTogbnVtLCBiOiBudW0pIC0+IHN0cmluZyB7XFxyXFxuICAgIC8vYyA6IG51bSA9IGEgKyBiO1xcclxcbiAgICB0ZXN0TnVtMSA9IDQ7XFxyXFxuICAgIHRlc3ROdW0yIDogbnVtID0gNTtcXHJcXG4gICAgdGVzdE51bV8zOiBudW07XFxyXFxuICAgIC8vIHRlc3RTdHJpbmcgPSBcXFwiaGVsbG9cXFwiO1xcclxcblxcclxcbiAgICB0ZXN0TnVtRXJyb3I6IG51bTEgPSA0O1xcclxcbn07XFxyXFxuX2NfU3R1ZmZfd2l0aF91bmRlcnNjb3Jlc18gPSA0NTYuNzg7XFxyXFxuXFxyXFxuLy9CdWdzXFxyXFxuLypcXHJcXG4tIENoZWNrIGZvciB0cmFpbGluZyBzdHJpbmcvbnVtZXJpYyBsaXRlcmFsIHRva2VuIGF0IHRoZSBlbmQgb2YgZmlsZVxcclxcbi0gQ2hlY2sgZm9yIG5ldyBsaW5lIGluIFxcXCJncmFiU3RyaW5nTGl0ZXJhbCgpXFxcIlxcclxcbiovXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scuft/lang/TestFile.scft\n");

/***/ }),

/***/ "./src/scuft/test/1-SimpleTest.scft":
/*!******************************************!*\
  !*** ./src/scuft/test/1-SimpleTest.scft ***!
  \******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"//Simple Test file for quick prototyping\\r\\n\\r\\n/**/\\r\\n/*\\r\\nThis is a block\\r\\ncomment\\r\\n*/\\r\\n\\r\\n        c3 = (num, num) -> <num, num> {\\r\\n\\r\\n};\\r\\n\\r\\ntestVar: num = 345.6;\\r\\na1=3; \\r\\ncats: string;\\r\\n\\r\\nb2: (num, num) -> num = 3;\\r\\n\\r\\nc2: ((num) -> void) = {\\r\\n    a();\\r\\n};\\r\\n\\r\\nc2(print);\\r\\n\\r\\nc3 : (num) -> void = (a: (b: num) -> void) {\\r\\n    a();\\r\\n}\\r\\n\\r\\nfunc = (a: num) {\\r\\n    print(a);\\r\\n}\\r\\nc3(func);\\r\\n\\r\\nb = (a: num) {\\r\\n    a + a;\\r\\n}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC90ZXN0LzEtU2ltcGxlVGVzdC5zY2Z0PzgxOWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLDhJQUE4SSxVQUFVLDZCQUE2QixTQUFTLGtCQUFrQixrQ0FBa0MsK0JBQStCLFlBQVksTUFBTSxrQkFBa0Isb0RBQW9ELFlBQVksS0FBSyx5QkFBeUIsaUJBQWlCLEtBQUssYUFBYSxzQkFBc0IsY0FBYyxLQUFLLENBQUMiLCJmaWxlIjoiLi9zcmMvc2N1ZnQvdGVzdC8xLVNpbXBsZVRlc3Quc2NmdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiLy9TaW1wbGUgVGVzdCBmaWxlIGZvciBxdWljayBwcm90b3R5cGluZ1xcclxcblxcclxcbi8qKi9cXHJcXG4vKlxcclxcblRoaXMgaXMgYSBibG9ja1xcclxcbmNvbW1lbnRcXHJcXG4qL1xcclxcblxcclxcbiAgICAgICAgYzMgPSAobnVtLCBudW0pIC0+IDxudW0sIG51bT4ge1xcclxcblxcclxcbn07XFxyXFxuXFxyXFxudGVzdFZhcjogbnVtID0gMzQ1LjY7XFxyXFxuYTE9MzsgXFxyXFxuY2F0czogc3RyaW5nO1xcclxcblxcclxcbmIyOiAobnVtLCBudW0pIC0+IG51bSA9IDM7XFxyXFxuXFxyXFxuYzI6ICgobnVtKSAtPiB2b2lkKSA9IHtcXHJcXG4gICAgYSgpO1xcclxcbn07XFxyXFxuXFxyXFxuYzIocHJpbnQpO1xcclxcblxcclxcbmMzIDogKG51bSkgLT4gdm9pZCA9IChhOiAoYjogbnVtKSAtPiB2b2lkKSB7XFxyXFxuICAgIGEoKTtcXHJcXG59XFxyXFxuXFxyXFxuZnVuYyA9IChhOiBudW0pIHtcXHJcXG4gICAgcHJpbnQoYSk7XFxyXFxufVxcclxcbmMzKGZ1bmMpO1xcclxcblxcclxcbmIgPSAoYTogbnVtKSB7XFxyXFxuICAgIGEgKyBhO1xcclxcbn1cIjsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scuft/test/1-SimpleTest.scft\n");

/***/ }),

/***/ "./src/scuft/test/2-LiteralTest.scft":
/*!*******************************************!*\
  !*** ./src/scuft/test/2-LiteralTest.scft ***!
  \*******************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"str   :    string =    \\\"Hello    W\\\\:orl   d\\\";  \\r\\nstr2              =   \\\"line thing \\\\n with more stuff\\\";\\r\\nstr3: string      = \\\"quotes \\\\\\\"within a \\\\\\\" quote\\\";\\r\\n\\r\\nstr\\r\\n\\r\\nnum1 :  num =  239 48230941\\r\\nnum2    :  num       = 239.48230941.000\\r\\nnum3    =       239 48230941.000\\r\\nnum4    = 280082348\\r\\nnum5    =       ~342`009*93844234090w1+9034 \\r\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC90ZXN0LzItTGl0ZXJhbFRlc3Quc2NmdD83YjViIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxpREFBaUQsK0RBQStELDJEQUEyRCx5TUFBeU0iLCJmaWxlIjoiLi9zcmMvc2N1ZnQvdGVzdC8yLUxpdGVyYWxUZXN0LnNjZnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInN0ciAgIDogICAgc3RyaW5nID0gICAgXFxcIkhlbGxvICAgIFdcXFxcOm9ybCAgIGRcXFwiOyAgXFxyXFxuc3RyMiAgICAgICAgICAgICAgPSAgIFxcXCJsaW5lIHRoaW5nIFxcXFxuIHdpdGggbW9yZSBzdHVmZlxcXCI7XFxyXFxuc3RyMzogc3RyaW5nICAgICAgPSBcXFwicXVvdGVzIFxcXFxcXFwid2l0aGluIGEgXFxcXFxcXCIgcXVvdGVcXFwiO1xcclxcblxcclxcbnN0clxcclxcblxcclxcbm51bTEgOiAgbnVtID0gIDIzOSA0ODIzMDk0MVxcclxcbm51bTIgICAgOiAgbnVtICAgICAgID0gMjM5LjQ4MjMwOTQxLjAwMFxcclxcbm51bTMgICAgPSAgICAgICAyMzkgNDgyMzA5NDEuMDAwXFxyXFxubnVtNCAgICA9IDI4MDA4MjM0OFxcclxcbm51bTUgICAgPSAgICAgICB+MzQyYDAwOSo5Mzg0NDIzNDA5MHcxKzkwMzQgXFxyXFxuXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scuft/test/2-LiteralTest.scft\n");

/***/ }),

/***/ "./src/scuft/test/3-TypeTest.scft":
/*!****************************************!*\
  !*** ./src/scuft/test/3-TypeTest.scft ***!
  \****************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"simpleTest1 : boolean;\\r\\nsimpleTest2 : (a: num, b: num) -> string; \\r\\n\\r\\n\\r\\ntest: num;\\r\\ntest = 3;\\r\\n\\r\\ncrazyF : ((num, num) -> num, (num, num) -> string, boolean, num) -> (num) -> num;\\r\\n\\r\\ncrazyF = [] (a: (num, num) -> num, b: (num, num) -> string, c: boolean, d: num) -> (num) -> num {\\r\\n\\r\\n}\\r\\n\\r\\nvectorTest: <num, num, <num, num>> = <1, 2, <1,2>>;\\r\\naddItem = (vector: ????, item: #generic T) {\\r\\n    return ????;\\r\\n};\\r\\n\\r\\n\\r\\nasdf = (((((((((((((((((((((identifier: string...)))))))))))))))))))))\\r\\n\\r\\na = (a: num, b: num) -> num {\\r\\n\\r\\n}\\r\\n\\r\\nb = (9 + 2 * 7);\\r\\n\\r\\nfunc : (num, num) -> num = [] (a: num, b: num) {\\r\\n    return -1;\\r\\n}\\r\\n\\r\\ndoFuncTwice([] (a: num, b: num) {\\r\\n    function(2, 3);\\r\\n    function(0, 1);\\r\\n}\\r\\n\\r\\ndoFuncTwice([] (a: num, b: num) {\\r\\n    return a + b;\\r\\n});\\r\\n\\r\\nprint(a: num = 3);\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC90ZXN0LzMtVHlwZVRlc3Quc2NmdD9kNjdmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSx1QkFBdUIsNkNBQTZDLHVCQUF1QixhQUFhLHlGQUF5Rix5R0FBeUcsU0FBUywyREFBMkQsZ0RBQWdELG9CQUFvQixNQUFNLHVIQUF1SCxTQUFTLHdCQUF3Qix3REFBd0Qsa0JBQWtCLEtBQUsseUNBQXlDLHVCQUF1Qix1QkFBdUIsS0FBSyx5Q0FBeUMscUJBQXFCLEtBQUssRUFBRSwwQkFBMEIsQ0FBQyIsImZpbGUiOiIuL3NyYy9zY3VmdC90ZXN0LzMtVHlwZVRlc3Quc2NmdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwic2ltcGxlVGVzdDEgOiBib29sZWFuO1xcclxcbnNpbXBsZVRlc3QyIDogKGE6IG51bSwgYjogbnVtKSAtPiBzdHJpbmc7IFxcclxcblxcclxcblxcclxcbnRlc3Q6IG51bTtcXHJcXG50ZXN0ID0gMztcXHJcXG5cXHJcXG5jcmF6eUYgOiAoKG51bSwgbnVtKSAtPiBudW0sIChudW0sIG51bSkgLT4gc3RyaW5nLCBib29sZWFuLCBudW0pIC0+IChudW0pIC0+IG51bTtcXHJcXG5cXHJcXG5jcmF6eUYgPSBbXSAoYTogKG51bSwgbnVtKSAtPiBudW0sIGI6IChudW0sIG51bSkgLT4gc3RyaW5nLCBjOiBib29sZWFuLCBkOiBudW0pIC0+IChudW0pIC0+IG51bSB7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbnZlY3RvclRlc3Q6IDxudW0sIG51bSwgPG51bSwgbnVtPj4gPSA8MSwgMiwgPDEsMj4+O1xcclxcbmFkZEl0ZW0gPSAodmVjdG9yOiA/Pz8/LCBpdGVtOiAjZ2VuZXJpYyBUKSB7XFxyXFxuICAgIHJldHVybiA/Pz8/O1xcclxcbn07XFxyXFxuXFxyXFxuXFxyXFxuYXNkZiA9ICgoKCgoKCgoKCgoKCgoKCgoKCgoKGlkZW50aWZpZXI6IHN0cmluZy4uLikpKSkpKSkpKSkpKSkpKSkpKSkpKVxcclxcblxcclxcbmEgPSAoYTogbnVtLCBiOiBudW0pIC0+IG51bSB7XFxyXFxuXFxyXFxufVxcclxcblxcclxcbmIgPSAoOSArIDIgKiA3KTtcXHJcXG5cXHJcXG5mdW5jIDogKG51bSwgbnVtKSAtPiBudW0gPSBbXSAoYTogbnVtLCBiOiBudW0pIHtcXHJcXG4gICAgcmV0dXJuIC0xO1xcclxcbn1cXHJcXG5cXHJcXG5kb0Z1bmNUd2ljZShbXSAoYTogbnVtLCBiOiBudW0pIHtcXHJcXG4gICAgZnVuY3Rpb24oMiwgMyk7XFxyXFxuICAgIGZ1bmN0aW9uKDAsIDEpO1xcclxcbn1cXHJcXG5cXHJcXG5kb0Z1bmNUd2ljZShbXSAoYTogbnVtLCBiOiBudW0pIHtcXHJcXG4gICAgcmV0dXJuIGEgKyBiO1xcclxcbn0pO1xcclxcblxcclxcbnByaW50KGE6IG51bSA9IDMpO1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scuft/test/3-TypeTest.scft\n");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! namespace exports */
/*! exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scuft_lang_ScuftTest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scuft/lang/ScuftTest */ \"./src/scuft/lang/ScuftTest.ts\");\n\r\n_scuft_lang_ScuftTest__WEBPACK_IMPORTED_MODULE_0__.default();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9tYWluLnRzP2NkNDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFbUQ7QUFFbkQsMERBQWlCLEVBQUUsQ0FBQyIsImZpbGUiOiIuL3NyYy9tYWluLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9pbXBvcnQgKiBhcyBFQ1NEZW1vIGZyb20gXCIuL3NjdWZ0L2Vjcy9FQ1NEZW1vXCJcclxuXHJcbmltcG9ydCAqIGFzIFNjdWZ0VGVzdCBmcm9tIFwiLi9zY3VmdC9sYW5nL1NjdWZ0VGVzdFwiXHJcblxyXG5TY3VmdFRlc3QuZGVmYXVsdCgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/main.ts\n");

/***/ }),

/***/ "./src/scuft/lang/Ast.ts":
/*!*******************************!*\
  !*** ./src/scuft/lang/Ast.ts ***!
  \*******************************/
/*! namespace exports */
/*! export ASTBinaryOpExpression [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTBlock [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTDeclaration [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTFunction [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTNumExpression [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTNumericLiteral [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTProgram [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTType [provided] [no usage info] [missing usage info prevents renaming] */
/*! export ASTTypeDeclaration [provided] [no usage info] [missing usage info prevents renaming] */
/*! export printAST [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"printAST\": () => /* binding */ printAST,\n/* harmony export */   \"ASTProgram\": () => /* binding */ ASTProgram,\n/* harmony export */   \"ASTBlock\": () => /* binding */ ASTBlock,\n/* harmony export */   \"ASTDeclaration\": () => /* binding */ ASTDeclaration,\n/* harmony export */   \"ASTType\": () => /* binding */ ASTType,\n/* harmony export */   \"ASTNumExpression\": () => /* binding */ ASTNumExpression,\n/* harmony export */   \"ASTBinaryOpExpression\": () => /* binding */ ASTBinaryOpExpression,\n/* harmony export */   \"ASTNumericLiteral\": () => /* binding */ ASTNumericLiteral,\n/* harmony export */   \"ASTFunction\": () => /* binding */ ASTFunction,\n/* harmony export */   \"ASTTypeDeclaration\": () => /* binding */ ASTTypeDeclaration\n/* harmony export */ });\nvar ASTFmt;\r\n(function (ASTFmt) {\r\n    ASTFmt[\"DEFAULT_FMT\"] = \"color: #CCDDD5;\";\r\n    ASTFmt[\"NODE_FMT\"] = \"color: #FFCA2E\";\r\n    ASTFmt[\"TYPE_FMT\"] = \"color: #FFEB95\";\r\n    ASTFmt[\"IDENTIFIER_FMT\"] = \"color: #348DFF\";\r\n    ASTFmt[\"NUM_EXPRESSION_FMT\"] = \"color: #E85A33\";\r\n})(ASTFmt || (ASTFmt = {}));\r\nfunction __fmt(str, fmt, format = ASTFmt.DEFAULT_FMT) {\r\n    fmt.push(format);\r\n    fmt.push(ASTFmt.DEFAULT_FMT);\r\n    return \"%c\" + str + \"%c\";\r\n}\r\nfunction __fmtA(str, fmt, format = ASTFmt.DEFAULT_FMT) {\r\n    return [__fmt(str, fmt, format)];\r\n}\r\nfunction __a(str) {\r\n    return [str];\r\n}\r\nfunction __merg(firstStr, secondStr) {\r\n    for (let i = 0; i < secondStr.length; i++) {\r\n        firstStr.push(secondStr[i]);\r\n    }\r\n    return firstStr;\r\n}\r\nfunction __s(amount, strA) {\r\n    let prefix = \"\";\r\n    for (let i = 0; i < amount; i++) {\r\n        prefix += \" \";\r\n    }\r\n    for (let i = 0; i < strA.length; i++) {\r\n        strA[i] = prefix + strA[i];\r\n    }\r\n    return strA;\r\n}\r\nfunction __tab(strA) {\r\n    for (let i = 0; i < strA.length; i++) {\r\n        strA[i] = \"\\t\" + strA[i];\r\n    }\r\n    return strA;\r\n}\r\nfunction __ls(astNodes, fmt) {\r\n    let lines = [];\r\n    for (let i = 0; i < astNodes.length; i++) {\r\n        lines.push(\" \" + i + \": \" + __fmt(astNodes[i].constructor.name, fmt, ASTFmt.NODE_FMT));\r\n        __merg(lines, __tab(recurseTree(astNodes[i], fmt)));\r\n    }\r\n    return lines;\r\n}\r\nfunction printAST(astNode) {\r\n    let fmt = [];\r\n    let outA = [];\r\n    __merg(outA, __fmtA(\"ASTProgram\", fmt, ASTFmt.NODE_FMT));\r\n    __merg(outA, recurseTree(astNode, fmt));\r\n    let str = [outA.join(\"\\n\")];\r\n    for (let i = 0; i < fmt.length; i++) {\r\n        str.push(fmt[i]);\r\n    }\r\n    console.log.apply(printAST, str);\r\n}\r\nfunction recurseTree(astNode, fmt) {\r\n    switch (astNode.constructor.name) {\r\n        case ASTProgram.name:\r\n            let linesPrgm = [];\r\n            __merg(linesPrgm, __a(\"statements:\"));\r\n            __merg(linesPrgm, __ls(astNode.statements, fmt));\r\n            return linesPrgm;\r\n        case ASTBlock.name:\r\n            let linesBlock = [];\r\n            __merg(linesBlock, __a(\"statements:\"));\r\n            __merg(linesBlock, __tab(__ls(astNode.statements, fmt)));\r\n            return linesBlock;\r\n        case ASTDeclaration.name:\r\n            let linesDec = [];\r\n            let astDec = astNode;\r\n            __merg(linesDec, [\"lvalue: \" + __fmt(astDec.lvalue.stringValue, fmt, ASTFmt.IDENTIFIER_FMT)]);\r\n            if (astDec.type) {\r\n                __merg(linesDec, [\"type:   \" + recurseTree(astDec.type, fmt)]);\r\n            }\r\n            if (astDec.rvalue) {\r\n                __merg(linesDec, [\"rvalue: \" + __fmt(astDec.rvalue.constructor.name, fmt, ASTFmt.NODE_FMT)]);\r\n                __merg(linesDec, __tab(__s(4, recurseTree(astDec.rvalue, fmt))));\r\n            }\r\n            return linesDec;\r\n        case ASTType.name:\r\n            let astType = astNode;\r\n            if (astType.type) {\r\n                return __fmtA(astType.type.stringValue, fmt, ASTFmt.TYPE_FMT);\r\n            }\r\n            else {\r\n                let out = \"(\";\r\n                for (let i = 0; i < astType.inputType.length; i++) {\r\n                    out += recurseTree(astType.inputType[i], fmt);\r\n                    if (i + 1 < astType.inputType.length) {\r\n                        out += \", \";\r\n                    }\r\n                }\r\n                out += \") -> \" + recurseTree(astType.outType, fmt);\r\n                return [out];\r\n            }\r\n        case ASTNumericLiteral.name:\r\n            let astNumLit = astNode;\r\n            return [\"value: \" + __fmt(astNumLit.value.value + \"\", fmt, ASTFmt.NUM_EXPRESSION_FMT)];\r\n        case ASTFunction.name:\r\n            let linesFunc = [];\r\n            let astFunc = astNode;\r\n            __merg(linesFunc, __a(\"paramDeclaration:\"));\r\n            __merg(linesFunc, __ls(astFunc.paramDeclaration, fmt));\r\n            __merg(linesFunc, __a(\"returnType: \" + recurseTree(astFunc.returnType, fmt)));\r\n            __merg(linesFunc, __a(\"block: \" + __fmt(astFunc.block.constructor.name, fmt, ASTFmt.NODE_FMT)));\r\n            __merg(linesFunc, __tab(__s(3, recurseTree(astFunc.block, fmt))));\r\n            return linesFunc;\r\n        default:\r\n            throw \"Can't recursively print tree because given node is not an AST node: \" + astNode.constructor.name;\r\n    }\r\n}\r\nclass ASTProgram {\r\n    constructor() {\r\n        this.statements = [];\r\n    }\r\n}\r\nclass ASTBlock {\r\n    constructor() {\r\n        this.statements = [];\r\n    }\r\n}\r\nclass ASTDeclaration {\r\n}\r\nclass ASTType {\r\n}\r\nclass ASTNumExpression {\r\n}\r\nclass ASTBinaryOpExpression extends ASTNumExpression {\r\n}\r\nclass ASTNumericLiteral extends ASTNumExpression {\r\n}\r\nclass ASTFunction {\r\n}\r\nclass ASTTypeDeclaration {\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scuft/lang/Ast.ts\n");

/***/ }),

/***/ "./src/scuft/lang/Lexer.ts":
/*!*********************************!*\
  !*** ./src/scuft/lang/Lexer.ts ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Lexer\n/* harmony export */ });\n/* harmony import */ var _Token__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Token */ \"./src/scuft/lang/Token.ts\");\n/* harmony import */ var _TokenType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenType */ \"./src/scuft/lang/TokenType.ts\");\n\r\n\r\nclass ParseErrorHandler {\r\n    constructor(prgmString) {\r\n        this.prgmString = prgmString;\r\n    }\r\n    getLine(line) {\r\n        let lineCount = 1;\r\n        let cur = 0;\r\n        while (lineCount < line) {\r\n            if (this.prgmString.charAt(cur) === \"\\n\") {\r\n                lineCount++;\r\n            }\r\n            cur++;\r\n        }\r\n        let end = cur;\r\n        while (end < this.prgmString.length && this.prgmString.charAt(end) !== \"\\n\") {\r\n            end++;\r\n        }\r\n        return this.prgmString.substr(cur, end - cur);\r\n    }\r\n    sizeNumber(value, length) {\r\n        let str = value + \"\";\r\n        for (let i = 0; i < length - str.length; i++) {\r\n            str = \" \" + str;\r\n        }\r\n        return str;\r\n    }\r\n    errToken(msg, token) {\r\n        let lineStr = this.getLine(token.line).trimLeft();\r\n        let error = \"(line:\" + token.line + \", col:\" + token.col + \"): \" + msg + \"\\n\";\r\n        let len = Math.floor(Math.log10(token.line + 1)) + 1;\r\n        if (token.line !== 1)\r\n            error += this.sizeNumber(token.line - 1, len) + \"\\n\";\r\n        error += this.sizeNumber(token.line, len) + \"\\t\" + lineStr + \"\\n\";\r\n        error += this.sizeNumber(token.line + 1, len) + \"\\n\";\r\n        throw error;\r\n    }\r\n}\r\nclass Lexer {\r\n    constructor(prgmString) {\r\n        this.curIndex = 0;\r\n        this.curLine = 1;\r\n        this.curCol = 1;\r\n        this.lastIndex = 0;\r\n        this.prgmString = prgmString;\r\n        this.parseErr = new ParseErrorHandler(prgmString);\r\n    }\r\n    lex() {\r\n        let tokens = [];\r\n        let token = this.createToken();\r\n        while (token.type !== _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.END_TKN) {\r\n            tokens.push(token);\r\n            token = this.createToken();\r\n        }\r\n        tokens.push(token);\r\n        return tokens;\r\n    }\r\n    getChar(index) {\r\n        return this.prgmString.charAt(index);\r\n    }\r\n    getCurChar() {\r\n        return this.getChar(this.curIndex);\r\n    }\r\n    getNextChar() {\r\n        return this.getChar(this.curIndex + 1);\r\n    }\r\n    incrementCurIndex(amount) {\r\n        if (this.getCurChar() === \"\\n\") {\r\n            this.curLine++;\r\n            this.curCol = 0;\r\n        }\r\n        this.curIndex += amount;\r\n        this.curCol += amount;\r\n    }\r\n    lookAheadToken(amount) {\r\n        if (amount <= 0) {\r\n            throw \"Must look ahead by number greater than 1\";\r\n        }\r\n        let lastCurIndex = this.curIndex;\r\n        let lastCurCol = this.curCol;\r\n        let lastCurLine = this.curLine;\r\n        for (let i = 0; i < amount - 1; i++) {\r\n            this.nextToken();\r\n        }\r\n        let tkn = this.nextToken();\r\n        this.curIndex = lastCurIndex;\r\n        this.curCol = lastCurCol;\r\n        this.curLine = lastCurLine;\r\n        this.lastIndex = this.curIndex;\r\n        return tkn;\r\n    }\r\n    peekToken() {\r\n        if (this.curIndex <= this.lastIndex) {\r\n            this.peekTkn = this.createToken();\r\n        }\r\n        return this.peekTkn;\r\n    }\r\n    nextToken() {\r\n        let tkn = this.peekToken();\r\n        this.lastIndex = this.curIndex;\r\n        return tkn;\r\n    }\r\n    createToken() {\r\n        let ch = this.getCurChar();\r\n        while (this.isWhitespace(ch)) {\r\n            this.incrementCurIndex(1);\r\n            ch = this.getCurChar();\r\n        }\r\n        if (this.curIndex >= this.prgmString.length) {\r\n            return this.grabToken(\"\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.END_TKN);\r\n        }\r\n        switch (this.getCurChar()) {\r\n            case \"=\":\r\n                if (this.getNextChar() === \"=\") {\r\n                    return this.grabToken(\"==\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_EQUALS_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\"=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.ASSIGNMENT_TKN);\r\n                }\r\n            case \">\":\r\n                if (this.getNextChar() === \"=\") {\r\n                    return this.grabToken(\">=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_GREATER_THAN_EQUAL_TKN);\r\n                }\r\n                else if (this.getNextChar() === \">\" && this.getChar(this.curIndex + 2) === \">\") {\r\n                    return this.grabToken(\">>>\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_SHIFT_ARITHMETIC_RIGHT_TKN);\r\n                }\r\n                else if (this.getNextChar() === \">\") {\r\n                    return this.grabToken(\">>\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_SHIFT_ARITHMETIC_RIGHT_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\">\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_GREATER_THAN_TKN);\r\n                }\r\n            case \"<\":\r\n                if (this.getNextChar() === \"=\") {\r\n                    return this.grabToken(\"<=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_LESS_THAN_EQUAL_TKN);\r\n                }\r\n                else if (this.getNextChar() === \"<\") {\r\n                    return this.grabToken(\"<<\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_SHIFT_LEFT_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\"<\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_LESS_THAN_TKN);\r\n                }\r\n            case \":\":\r\n                return this.grabToken(\":\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COLON_TKN);\r\n            case \"{\":\r\n                return this.grabToken(\"{\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_CURLY_TKN);\r\n            case \"}\":\r\n                return this.grabToken(\"}\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_CURLY_TKN);\r\n            case \"[\":\r\n                return this.grabToken(\"[\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_SQUARE_TKN);\r\n            case \"]\":\r\n                return this.grabToken(\"]\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_SQUARE_TKN);\r\n            case \"(\":\r\n                return this.grabToken(\"(\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_PARENS_TKN);\r\n            case \")\":\r\n                return this.grabToken(\")\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_PARENS_TKN);\r\n            case \"|\":\r\n                if (this.getNextChar() === \"|\") {\r\n                    return this.grabToken(\"||\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_OR_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\"|\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_BAR_TKN);\r\n                }\r\n            case \"&\":\r\n                if (this.getNextChar() === \"&\") {\r\n                    return this.grabToken(\"&&\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_AND_TKN);\r\n                }\r\n                else {\r\n                    let ampersand = this.grabToken(\"&\" + this.getNextChar(), _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.UNKNOWN_TKN);\r\n                    ampersand.value = \"&\";\r\n                    return ampersand;\r\n                }\r\n            case \"$\":\r\n                if (this.getNextChar() === \"$\") {\r\n                    return this.grabToken(\"$$\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_XOR_TKN);\r\n                }\r\n                else {\r\n                    let dollar = this.grabToken(\"$\" + this.getNextChar(), _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.UNKNOWN_TKN);\r\n                    dollar.value = \"$\";\r\n                    return this.grabToken(\"$\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.UNKNOWN_TKN);\r\n                }\r\n            case \"!\":\r\n                if (this.getNextChar() === \"=\") {\r\n                    return this.grabToken(\"!=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_NOT_EQUALS_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\"!\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_NOT_TKN);\r\n                }\r\n            case \"+\":\r\n                switch (this.getNextChar()) {\r\n                    case \"=\":\r\n                        return this.grabToken(\"+=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_ADD_EQUALS_TKN);\r\n                    case \"+\":\r\n                        return this.grabToken(\"++\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_ADD_ADD_TKN);\r\n                    default:\r\n                        return this.grabToken(\"+\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_ADD_TKN);\r\n                }\r\n            case \"-\":\r\n                switch (this.getNextChar()) {\r\n                    case \"=\":\r\n                        return this.grabToken(\"-=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_SUBTR_EQUALS_TKN);\r\n                    case \"-\":\r\n                        return this.grabToken(\"--\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_SUBTR_SUBTR_TKN);\r\n                    case \">\":\r\n                        return this.grabToken(\"->\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.FUNC_MAPPING_TKN);\r\n                    default:\r\n                        return this.grabToken(\"-\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_SUBTR_TKN);\r\n                }\r\n            case \"*\":\r\n                switch (this.getNextChar()) {\r\n                    case \"=\":\r\n                        return this.grabToken(\"*=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_MULT_EQUALS_TKN);\r\n                    default:\r\n                        return this.grabToken(\"*\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_MULT_TKN);\r\n                }\r\n            case \"/\":\r\n                switch (this.getNextChar()) {\r\n                    case \"/\":\r\n                        this.consumeSingleLineComment();\r\n                        return this.createToken();\r\n                    case \"*\":\r\n                        this.consumeBlockComment();\r\n                        return this.createToken();\r\n                    case \"=\":\r\n                        return this.grabToken(\"/=\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_DIV_EQUALS_TKN);\r\n                    default:\r\n                        return this.grabToken(\"/\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_DIVIDE_TKN);\r\n                }\r\n            case \"^\":\r\n                return this.grabToken(\"^\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_CARROT_TKN);\r\n            case \"%\":\r\n                return this.grabToken(\"%\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.OP_MODULUS_TKN);\r\n            case \"~\":\r\n                return this.grabToken(\"~\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_NOT_TKN);\r\n            case \".\":\r\n                if (this.getNextChar() === \".\" && this.getChar(this.curIndex + 2) === \".\") {\r\n                    return this.grabToken(\"...\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.ELLIPSES_TKN);\r\n                }\r\n                else {\r\n                    return this.grabToken(\".\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.DOT_TKN);\r\n                }\r\n            case \",\":\r\n                return this.grabToken(\",\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COMMA_TKN);\r\n            case \";\":\r\n                return this.grabToken(\";\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.SEMI_COLON_TKN);\r\n            case '\"':\r\n                return this.grabStringLiteral();\r\n            default:\r\n                if (this.isLetter(ch)) {\r\n                    return this.grabIdentifier();\r\n                }\r\n                else if (this.isNumber(ch)) {\r\n                    return this.grabNumericLiteral();\r\n                }\r\n                else {\r\n                    let unknown = this.grabToken(ch, _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.UNKNOWN_TKN);\r\n                    unknown.value = ch;\r\n                    return unknown;\r\n                }\r\n        }\r\n    }\r\n    grabToken(str, type) {\r\n        this.incrementCurIndex(str.length);\r\n        return this.makeToken(str, type);\r\n    }\r\n    makeToken(str, type) {\r\n        let tkn = new _Token__WEBPACK_IMPORTED_MODULE_0__.default(str, this.curLine, this.curCol - str.length, type);\r\n        return tkn;\r\n    }\r\n    grabNumericLiteral() {\r\n        let number = 0;\r\n        let ch = this.getCurChar();\r\n        let point = false;\r\n        let divideBy = 1;\r\n        while (this.isNumber(ch) || ch === \".\") {\r\n            if (ch !== \"_\") {\r\n                if (ch === \".\") {\r\n                    if (point === false) {\r\n                        point = true;\r\n                        this.incrementCurIndex(1);\r\n                        ch = this.getCurChar();\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        throw \"\";\r\n                    }\r\n                }\r\n                number = 10 * number + parseInt(ch);\r\n                if (point)\r\n                    divideBy *= 10;\r\n            }\r\n            this.incrementCurIndex(1);\r\n            ch = this.getCurChar();\r\n        }\r\n        let value = number / divideBy;\r\n        let tkn = this.makeToken(value + \"\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.NUMERIC_LITERAL_TKN);\r\n        tkn.value = value;\r\n        return tkn;\r\n    }\r\n    grabStringLiteral() {\r\n        this.grabToken('\"', _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.DOUBLE_QUOTE_TKN);\r\n        let str = \"\";\r\n        let ch = this.getCurChar();\r\n        let escapeChar = false;\r\n        while (escapeChar || ch !== '\"') {\r\n            if (!escapeChar || ch === '\"') {\r\n                str += ch;\r\n            }\r\n            if (ch === \"\\\\\") {\r\n                escapeChar = true;\r\n            }\r\n            else {\r\n                escapeChar = false;\r\n            }\r\n            this.incrementCurIndex(1);\r\n            ch = this.getCurChar();\r\n        }\r\n        this.grabToken('\"', _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.DOUBLE_QUOTE_TKN);\r\n        let tkn = this.makeToken('\"' + str + '\"', _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.STRING_LITERAL_TKN);\r\n        tkn.value = str;\r\n        return tkn;\r\n    }\r\n    grabIdentifier() {\r\n        let str = \"\";\r\n        let ch = this.getCurChar();\r\n        while (this.isLetter(ch) || this.isNumber(ch)) {\r\n            this.incrementCurIndex(1);\r\n            str = str + ch;\r\n            ch = this.getCurChar();\r\n        }\r\n        switch (str) {\r\n            case \"type\":\r\n                return this.makeToken(\"type\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.TYPE_TKN);\r\n            case \"module\":\r\n                return this.makeToken(\"module\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.MODULE_TKN);\r\n            case \"for\":\r\n                return this.makeToken(\"for\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.FOR_TKN);\r\n            case \"while\":\r\n                return this.makeToken(\"while\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.WHILE_TKN);\r\n            case \"break\":\r\n                return this.makeToken(\"break\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BREAK_TKN);\r\n            case \"continue\":\r\n                return this.makeToken(\"continue\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.CONTINUE_TKN);\r\n            case \"if\":\r\n                return this.makeToken(\"if\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.IF_TKN);\r\n            case \"else\":\r\n                return this.makeToken(\"else\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.ELSE_TKN);\r\n            case \"or\":\r\n                return this.makeToken(\"or\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_OR_TKN);\r\n            case \"and\":\r\n                return this.makeToken(\"and\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_AND_TKN);\r\n            case \"xor\":\r\n                return this.makeToken(\"xor\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BIN_XOR_TKN);\r\n            case \"true\":\r\n                return this.makeToken(\"true\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_TRUE_TKN);\r\n            case \"false\":\r\n                return this.makeToken(\"false\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COND_FALSE_TKN);\r\n            case \"void\":\r\n                return this.makeToken(\"void\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.VOID_TKN);\r\n            case \"num\":\r\n                return this.makeToken(\"num\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.NUM_TKN);\r\n            case \"string\":\r\n                return this.makeToken(\"string\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.STRING_TKN);\r\n            case \"bool\":\r\n                return this.makeToken(\"bool\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BOOL_TKN);\r\n            case \"return\":\r\n                return this.makeToken(\"return\", _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RETURN_TKN);\r\n            default:\r\n                return this.makeToken(str, _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.IDENTIFIER_TKN);\r\n        }\r\n    }\r\n    consumeSingleLineComment() {\r\n        this.incrementCurIndex(2);\r\n        while (this.curIndex < this.prgmString.length && this.getCurChar() !== \"\\n\") {\r\n            this.incrementCurIndex(1);\r\n        }\r\n    }\r\n    consumeBlockComment() {\r\n        this.incrementCurIndex(2);\r\n        while (this.curIndex < this.prgmString.length && !(this.getCurChar() === \"*\" && this.getNextChar() === \"/\")) {\r\n            this.incrementCurIndex(1);\r\n        }\r\n        this.incrementCurIndex(2);\r\n    }\r\n    isWhitespace(ch) {\r\n        return ch === \" \" || ch === \"\\t\" || ch === \"\\r\" || ch === \"\\n\";\r\n    }\r\n    isLetter(ch) {\r\n        let n = ch.charCodeAt(0);\r\n        return (n >= 65 && n < 91) || (n >= 97 && n < 123) || ch === \"'\" || ch === \"_\";\r\n    }\r\n    isNumber(ch) {\r\n        let n = ch.charCodeAt(0);\r\n        return (n >= 48 && n <= 57) || ch === \"_\";\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL0xleGVyLnRzP2E3ZTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQ1E7QUFFcEMsTUFBTSxpQkFBaUI7SUFFbkIsWUFBWSxVQUFrQjtRQUMxQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztJQUNqQyxDQUFDO0lBQ08sT0FBTyxDQUFDLElBQVk7UUFDeEIsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNaLE9BQU8sU0FBUyxHQUFHLElBQUksRUFBRTtZQUNyQixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLElBQUksRUFBRTtnQkFDdEMsU0FBUyxFQUFFLENBQUM7YUFDZjtZQUNELEdBQUcsRUFBRSxDQUFDO1NBQ1Q7UUFDRCxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZCxPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUU7WUFDekUsR0FBRyxFQUFFLENBQUM7U0FDVDtRQUNELE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBQ08sVUFBVSxDQUFDLEtBQWEsRUFBRSxNQUFjO1FBQzVDLElBQUksR0FBRyxHQUFHLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDckIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsR0FBRyxDQUFDO1NBQ25CO1FBQ0QsT0FBTyxHQUFHLENBQUM7SUFD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UUFDRCxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUNPLFlBQVksQ0FBQyxFQUFVO1FBQzNCLE9BQU8sRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLEtBQUssSUFBSSxJQUFJLEVBQUUsS0FBSyxJQUFJLElBQUksRUFBRSxLQUFLLElBQUksQ0FBQztJQUNuRSxDQUFDO0lBQ08sUUFBUSxDQUFDLEVBQVU7UUFDdkIsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN6QixPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSSxFQUFFLEtBQUssR0FBRyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUM7SUFDbkYsQ0FBQztJQUNPLFFBQVEsQ0FBQyxFQUFVO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekIsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxHQUFHLENBQUM7SUFDOUMsQ0FBQztDQUNKIiwiZmlsZSI6Ii4vc3JjL3NjdWZ0L2xhbmcvTGV4ZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVG9rZW4gZnJvbSBcIi4vVG9rZW5cIjtcclxuaW1wb3J0IFRva2VuVHlwZSBmcm9tIFwiLi9Ub2tlblR5cGVcIjtcclxuXHJcbmNsYXNzIFBhcnNlRXJyb3JIYW5kbGVyIHtcclxuICAgIHByaXZhdGUgcHJnbVN0cmluZzogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IocHJnbVN0cmluZzogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5wcmdtU3RyaW5nID0gcHJnbVN0cmluZztcclxuICAgIH1cclxuICAgIHByaXZhdGUgZ2V0TGluZShsaW5lOiBudW1iZXIpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCBsaW5lQ291bnQgPSAxO1xyXG4gICAgICAgIGxldCBjdXIgPSAwO1xyXG4gICAgICAgIHdoaWxlIChsaW5lQ291bnQgPCBsaW5lKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnByZ21TdHJpbmcuY2hhckF0KGN1cikgPT09IFwiXFxuXCIpIHtcclxuICAgICAgICAgICAgICAgIGxpbmVDb3VudCsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cisrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgZW5kID0gY3VyO1xyXG4gICAgICAgIHdoaWxlIChlbmQgPCB0aGlzLnByZ21TdHJpbmcubGVuZ3RoICYmIHRoaXMucHJnbVN0cmluZy5jaGFyQXQoZW5kKSAhPT0gXCJcXG5cIikge1xyXG4gICAgICAgICAgICBlbmQrKztcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJnbVN0cmluZy5zdWJzdHIoY3VyLCBlbmQgLSBjdXIpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBzaXplTnVtYmVyKHZhbHVlOiBudW1iZXIsIGxlbmd0aDogbnVtYmVyKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgc3RyID0gdmFsdWUgKyBcIlwiO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoIC0gc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHN0ciA9IFwiIFwiICsgc3RyO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3RyO1xyXG4gICAgfVxyXG4gICAgZXJyVG9rZW4obXNnOiBzdHJpbmcsIHRva2VuOiBUb2tlbik6IG5ldmVyIHtcclxuICAgICAgICBsZXQgbGluZVN0ciA9IHRoaXMuZ2V0TGluZSh0b2tlbi5saW5lKS50cmltTGVmdCgpO1xyXG5cclxuICAgICAgICBsZXQgZXJyb3IgPSBcIihsaW5lOlwiICsgdG9rZW4ubGluZSArIFwiLCBjb2w6XCIgKyB0b2tlbi5jb2wgKyBcIik6IFwiICsgbXNnICsgXCJcXG5cIjtcclxuICAgICAgICBsZXQgbGVuID0gTWF0aC5mbG9vcihNYXRoLmxvZzEwKHRva2VuLmxpbmUgKyAxKSkgKyAxO1xyXG4gICAgICAgIGlmICh0b2tlbi5saW5lICE9PSAxKSBlcnJvciArPSB0aGlzLnNpemVOdW1iZXIodG9rZW4ubGluZSAtIDEsIGxlbikgKyBcIlxcblwiO1xyXG4gICAgICAgIGVycm9yICs9IHRoaXMuc2l6ZU51bWJlcih0b2tlbi5saW5lLCBsZW4pICsgXCJcXHRcIiArIGxpbmVTdHIgKyBcIlxcblwiO1xyXG4gICAgICAgIGVycm9yICs9IHRoaXMuc2l6ZU51bWJlcih0b2tlbi5saW5lICsgMSwgbGVuKSArIFwiXFxuXCI7XHJcbiAgICAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGV4ZXIge1xyXG4gICAgcmVhZG9ubHkgcGFyc2VFcnI6IFBhcnNlRXJyb3JIYW5kbGVyO1xyXG4gICAgcmVhZG9ubHkgcHJnbVN0cmluZzogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBjdXJJbmRleCA9IDA7XHJcbiAgICBwcml2YXRlIGN1ckxpbmUgPSAxO1xyXG4gICAgcHJpdmF0ZSBjdXJDb2wgPSAxO1xyXG4gICAgY29uc3RydWN0b3IocHJnbVN0cmluZzogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5wcmdtU3RyaW5nID0gcHJnbVN0cmluZztcclxuICAgICAgICB0aGlzLnBhcnNlRXJyID0gbmV3IFBhcnNlRXJyb3JIYW5kbGVyKHByZ21TdHJpbmcpO1xyXG4gICAgfVxyXG4gICAgbGV4KCk6IFRva2VuW10ge1xyXG4gICAgICAgIGxldCB0b2tlbnM6IFRva2VuW10gPSBbXTtcclxuICAgICAgICBsZXQgdG9rZW4gPSB0aGlzLmNyZWF0ZVRva2VuKCk7XHJcbiAgICAgICAgd2hpbGUgKHRva2VuLnR5cGUgIT09IFRva2VuVHlwZS5FTkRfVEtOKSB7XHJcbiAgICAgICAgICAgIHRva2Vucy5wdXNoKHRva2VuKTtcclxuICAgICAgICAgICAgdG9rZW4gPSB0aGlzLmNyZWF0ZVRva2VuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRva2Vucy5wdXNoKHRva2VuKTtcclxuICAgICAgICByZXR1cm4gdG9rZW5zO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBnZXRDaGFyKGluZGV4OiBudW1iZXIpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByZ21TdHJpbmcuY2hhckF0KGluZGV4KTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgZ2V0Q3VyQ2hhcigpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmdldENoYXIodGhpcy5jdXJJbmRleCk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGdldE5leHRDaGFyKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0Q2hhcih0aGlzLmN1ckluZGV4ICsgMSk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGluY3JlbWVudEN1ckluZGV4KGFtb3VudDogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZ2V0Q3VyQ2hhcigpID09PSBcIlxcblwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3VyTGluZSsrO1xyXG4gICAgICAgICAgICB0aGlzLmN1ckNvbCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY3VySW5kZXggKz0gYW1vdW50O1xyXG4gICAgICAgIHRoaXMuY3VyQ29sICs9IGFtb3VudDtcclxuICAgIH1cclxuICAgIGxvb2tBaGVhZFRva2VuKGFtb3VudDogbnVtYmVyKTogVG9rZW4ge1xyXG4gICAgICAgIGlmIChhbW91bnQgPD0gMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBcIk11c3QgbG9vayBhaGVhZCBieSBudW1iZXIgZ3JlYXRlciB0aGFuIDFcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGxhc3RDdXJJbmRleCA9IHRoaXMuY3VySW5kZXg7XHJcbiAgICAgICAgbGV0IGxhc3RDdXJDb2wgPSB0aGlzLmN1ckNvbDtcclxuICAgICAgICBsZXQgbGFzdEN1ckxpbmUgPSB0aGlzLmN1ckxpbmU7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhbW91bnQgLSAxOyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5uZXh0VG9rZW4oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHRrbiA9IHRoaXMubmV4dFRva2VuKCk7XHJcbiAgICAgICAgdGhpcy5jdXJJbmRleCA9IGxhc3RDdXJJbmRleDtcclxuICAgICAgICB0aGlzLmN1ckNvbCA9IGxhc3RDdXJDb2w7XHJcbiAgICAgICAgdGhpcy5jdXJMaW5lID0gbGFzdEN1ckxpbmU7XHJcbiAgICAgICAgdGhpcy5sYXN0SW5kZXggPSB0aGlzLmN1ckluZGV4O1xyXG4gICAgICAgIHJldHVybiB0a247XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHBlZWtUa24hOiBUb2tlbjtcclxuICAgIHByaXZhdGUgbGFzdEluZGV4OiBudW1iZXIgPSAwO1xyXG4gICAgcGVla1Rva2VuKCk6IFRva2VuIHtcclxuICAgICAgICBpZiAodGhpcy5jdXJJbmRleCA8PSB0aGlzLmxhc3RJbmRleCkge1xyXG4gICAgICAgICAgICB0aGlzLnBlZWtUa24gPSB0aGlzLmNyZWF0ZVRva2VuKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLnBlZWtUa247XHJcbiAgICB9XHJcbiAgICBuZXh0VG9rZW4oKTogVG9rZW4ge1xyXG4gICAgICAgIGxldCB0a24gPSB0aGlzLnBlZWtUb2tlbigpO1xyXG4gICAgICAgIHRoaXMubGFzdEluZGV4ID0gdGhpcy5jdXJJbmRleDtcclxuICAgICAgICByZXR1cm4gdGtuO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBjcmVhdGVUb2tlbigpOiBUb2tlbiB7XHJcbiAgICAgICAgLy9DbGVhciBXaGl0ZXNwYWNlXHJcbiAgICAgICAgbGV0IGNoID0gdGhpcy5nZXRDdXJDaGFyKCk7XHJcbiAgICAgICAgd2hpbGUgKHRoaXMuaXNXaGl0ZXNwYWNlKGNoKSkge1xyXG4gICAgICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDEpO1xyXG4gICAgICAgICAgICBjaCA9IHRoaXMuZ2V0Q3VyQ2hhcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy9SZXR1cm4gZW5kIHRva2VuIGlmIGVuZCBvZiBzdHJpbmcgaW5wdXQgcmVhY2hlZFxyXG4gICAgICAgIGlmICh0aGlzLmN1ckluZGV4ID49IHRoaXMucHJnbVN0cmluZy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiXCIsIFRva2VuVHlwZS5FTkRfVEtOKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHN3aXRjaCAodGhpcy5nZXRDdXJDaGFyKCkpIHtcclxuICAgICAgICAgICAgLy8gQXNzaWdubWVudFxyXG4gICAgICAgICAgICBjYXNlIFwiPVwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0TmV4dENoYXIoKSA9PT0gXCI9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI9PVwiLCBUb2tlblR5cGUuQ09ORF9FUVVBTFNfVEtOKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiPVwiLCBUb2tlblR5cGUuQVNTSUdOTUVOVF9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiPlwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0TmV4dENoYXIoKSA9PT0gXCI9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI+PVwiLCBUb2tlblR5cGUuQ09ORF9HUkVBVEVSX1RIQU5fRVFVQUxfVEtOKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5nZXROZXh0Q2hhcigpID09PSBcIj5cIiAmJiB0aGlzLmdldENoYXIodGhpcy5jdXJJbmRleCArIDIpID09PSBcIj5cIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIj4+PlwiLCBUb2tlblR5cGUuQklOX1NISUZUX0FSSVRITUVUSUNfUklHSFRfVEtOKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5nZXROZXh0Q2hhcigpID09PSBcIj5cIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIj4+XCIsIFRva2VuVHlwZS5CSU5fU0hJRlRfQVJJVEhNRVRJQ19SSUdIVF9US04pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI+XCIsIFRva2VuVHlwZS5DT05EX0dSRUFURVJfVEhBTl9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiPFwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0TmV4dENoYXIoKSA9PT0gXCI9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI8PVwiLCBUb2tlblR5cGUuQ09ORF9MRVNTX1RIQU5fRVFVQUxfVEtOKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5nZXROZXh0Q2hhcigpID09PSBcIjxcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIjw8XCIsIFRva2VuVHlwZS5CSU5fU0hJRlRfTEVGVF9US04pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI8XCIsIFRva2VuVHlwZS5DT05EX0xFU1NfVEhBTl9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiOlwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiOlwiLCBUb2tlblR5cGUuQ09MT05fVEtOKTtcclxuXHJcbiAgICAgICAgICAgIC8vIEJsb2Nrc1xyXG4gICAgICAgICAgICBjYXNlIFwie1wiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwie1wiLCBUb2tlblR5cGUuTEVGVF9DVVJMWV9US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwifVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwifVwiLCBUb2tlblR5cGUuUklHSFRfQ1VSTFlfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcIltcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIltcIiwgVG9rZW5UeXBlLkxFRlRfU1FVQVJFX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgXCJdXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCJdXCIsIFRva2VuVHlwZS5SSUdIVF9TUVVBUkVfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcIihcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIihcIiwgVG9rZW5UeXBlLkxFRlRfUEFSRU5TX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgXCIpXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIpXCIsIFRva2VuVHlwZS5SSUdIVF9QQVJFTlNfVEtOKTtcclxuXHJcbiAgICAgICAgICAgIC8vQ29uZGl0aW9uYWxzXHJcbiAgICAgICAgICAgIGNhc2UgXCJ8XCI6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXROZXh0Q2hhcigpID09PSBcInxcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcInx8XCIsIFRva2VuVHlwZS5DT05EX09SX1RLTik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcInxcIiwgVG9rZW5UeXBlLk9QX0JBUl9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiJlwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0TmV4dENoYXIoKSA9PT0gXCImXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCImJlwiLCBUb2tlblR5cGUuQ09ORF9BTkRfVEtOKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFtcGVyc2FuZCA9IHRoaXMuZ3JhYlRva2VuKFwiJlwiICsgdGhpcy5nZXROZXh0Q2hhcigpLCBUb2tlblR5cGUuVU5LTk9XTl9US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIGFtcGVyc2FuZC52YWx1ZSA9IFwiJlwiO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhbXBlcnNhbmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgXCIkXCI6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXROZXh0Q2hhcigpID09PSBcIiRcIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIiQkXCIsIFRva2VuVHlwZS5DT05EX1hPUl9US04pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZG9sbGFyID0gdGhpcy5ncmFiVG9rZW4oXCIkXCIgKyB0aGlzLmdldE5leHRDaGFyKCksIFRva2VuVHlwZS5VTktOT1dOX1RLTik7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9sbGFyLnZhbHVlID0gXCIkXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiJFwiLCBUb2tlblR5cGUuVU5LTk9XTl9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiIVwiOlxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0TmV4dENoYXIoKSA9PT0gXCI9XCIpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIhPVwiLCBUb2tlblR5cGUuQ09ORF9OT1RfRVFVQUxTX1RLTik7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIiFcIiwgVG9rZW5UeXBlLkNPTkRfTk9UX1RLTik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAvLyBPcGVyYXRvcnNcclxuICAgICAgICAgICAgY2FzZSBcIitcIjpcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5nZXROZXh0Q2hhcigpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIj1cIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiKz1cIiwgVG9rZW5UeXBlLk9QX0FERF9FUVVBTFNfVEtOKTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiK1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIrK1wiLCBUb2tlblR5cGUuT1BfQUREX0FERF9US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIitcIiwgVG9rZW5UeXBlLk9QX0FERF9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiLVwiOlxyXG4gICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLmdldE5leHRDaGFyKCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiPVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCItPVwiLCBUb2tlblR5cGUuT1BfU1VCVFJfRVFVQUxTX1RLTik7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIi1cIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiLS1cIiwgVG9rZW5UeXBlLk9QX1NVQlRSX1NVQlRSX1RLTik7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIj5cIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiLT5cIiwgVG9rZW5UeXBlLkZVTkNfTUFQUElOR19US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIi1cIiwgVG9rZW5UeXBlLk9QX1NVQlRSX1RLTik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhc2UgXCIqXCI6XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHRoaXMuZ2V0TmV4dENoYXIoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCI9XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIio9XCIsIFRva2VuVHlwZS5PUF9NVUxUX0VRVUFMU19US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIipcIiwgVG9rZW5UeXBlLk9QX01VTFRfVEtOKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBcIi9cIjpcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAodGhpcy5nZXROZXh0Q2hhcigpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIi9cIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25zdW1lU2luZ2xlTGluZUNvbW1lbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVG9rZW4oKTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiKlwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnN1bWVCbG9ja0NvbW1lbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlVG9rZW4oKTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiPVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIvPVwiLCBUb2tlblR5cGUuT1BfRElWX0VRVUFMU19US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIi9cIiwgVG9rZW5UeXBlLk9QX0RJVklERV9US04pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXNlIFwiXlwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiXlwiLCBUb2tlblR5cGUuT1BfQ0FSUk9UX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgXCIlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIlXCIsIFRva2VuVHlwZS5PUF9NT0RVTFVTX1RLTik7XHJcblxyXG4gICAgICAgICAgICAvL01pc2NlbGxhbmVvdXNcclxuICAgICAgICAgICAgY2FzZSBcIn5cIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIn5cIiwgVG9rZW5UeXBlLkJJTl9OT1RfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcIi5cIjpcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldE5leHRDaGFyKCkgPT09IFwiLlwiICYmIHRoaXMuZ2V0Q2hhcih0aGlzLmN1ckluZGV4ICsgMikgPT09IFwiLlwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ3JhYlRva2VuKFwiLi4uXCIsIFRva2VuVHlwZS5FTExJUFNFU19US04pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCIuXCIsIFRva2VuVHlwZS5ET1RfVEtOKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FzZSBcIixcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJUb2tlbihcIixcIiwgVG9rZW5UeXBlLkNPTU1BX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgXCI7XCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiVG9rZW4oXCI7XCIsIFRva2VuVHlwZS5TRU1JX0NPTE9OX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgJ1wiJzpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJTdHJpbmdMaXRlcmFsKCk7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5pc0xldHRlcihjaCkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5ncmFiSWRlbnRpZmllcigpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTnVtYmVyKGNoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdyYWJOdW1lcmljTGl0ZXJhbCgpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgdW5rbm93biA9IHRoaXMuZ3JhYlRva2VuKGNoLCBUb2tlblR5cGUuVU5LTk9XTl9US04pO1xyXG4gICAgICAgICAgICAgICAgICAgIHVua25vd24udmFsdWUgPSBjaDtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5rbm93bjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGdyYWJUb2tlbihzdHI6IHN0cmluZywgdHlwZTogVG9rZW5UeXBlKTogVG9rZW4ge1xyXG4gICAgICAgIHRoaXMuaW5jcmVtZW50Q3VySW5kZXgoc3RyLmxlbmd0aCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKHN0ciwgdHlwZSk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIG1ha2VUb2tlbihzdHI6IHN0cmluZywgdHlwZTogVG9rZW5UeXBlKTogVG9rZW4ge1xyXG4gICAgICAgIGxldCB0a24gPSBuZXcgVG9rZW4oc3RyLCB0aGlzLmN1ckxpbmUsIHRoaXMuY3VyQ29sIC0gc3RyLmxlbmd0aCwgdHlwZSk7XHJcbiAgICAgICAgcmV0dXJuIHRrbjtcclxuICAgIH1cclxuICAgIHByaXZhdGUgZ3JhYk51bWVyaWNMaXRlcmFsKCk6IFRva2VuIHtcclxuICAgICAgICBsZXQgbnVtYmVyID0gMDtcclxuICAgICAgICBsZXQgY2ggPSB0aGlzLmdldEN1ckNoYXIoKTtcclxuICAgICAgICBsZXQgcG9pbnQgPSBmYWxzZTtcclxuICAgICAgICBsZXQgZGl2aWRlQnkgPSAxO1xyXG4gICAgICAgIHdoaWxlICh0aGlzLmlzTnVtYmVyKGNoKSB8fCBjaCA9PT0gXCIuXCIpIHtcclxuICAgICAgICAgICAgaWYgKGNoICE9PSBcIl9cIikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoID09PSBcIi5cIikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChwb2ludCA9PT0gZmFsc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnQgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaCA9IHRoaXMuZ2V0Q3VyQ2hhcigpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBcIlwiO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBlcnIoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICAnSW52YWxpZCBOdW1iZXIgKHRvbyBtYW55IGRlY2ltYWwgcG9pbnRzKTogXCInICsgbnVtYmVyIC8gZGl2aWRlQnkgKyAnLlwiJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuY3VyTGluZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuY3VyQ29sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbnVtYmVyID0gMTAgKiBudW1iZXIgKyBwYXJzZUludChjaCk7XHJcbiAgICAgICAgICAgICAgICBpZiAocG9pbnQpIGRpdmlkZUJ5ICo9IDEwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50Q3VySW5kZXgoMSk7XHJcbiAgICAgICAgICAgIGNoID0gdGhpcy5nZXRDdXJDaGFyKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdmFsdWUgPSBudW1iZXIgLyBkaXZpZGVCeTtcclxuICAgICAgICBsZXQgdGtuID0gdGhpcy5tYWtlVG9rZW4odmFsdWUgKyBcIlwiLCBUb2tlblR5cGUuTlVNRVJJQ19MSVRFUkFMX1RLTik7XHJcbiAgICAgICAgdGtuLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgcmV0dXJuIHRrbjtcclxuICAgIH1cclxuICAgIHByaXZhdGUgZ3JhYlN0cmluZ0xpdGVyYWwoKTogVG9rZW4ge1xyXG4gICAgICAgIHRoaXMuZ3JhYlRva2VuKCdcIicsIFRva2VuVHlwZS5ET1VCTEVfUVVPVEVfVEtOKTtcclxuICAgICAgICBsZXQgc3RyID0gXCJcIjtcclxuICAgICAgICBsZXQgY2ggPSB0aGlzLmdldEN1ckNoYXIoKTtcclxuICAgICAgICBsZXQgZXNjYXBlQ2hhciA9IGZhbHNlO1xyXG4gICAgICAgIHdoaWxlIChlc2NhcGVDaGFyIHx8IGNoICE9PSAnXCInKSB7XHJcbiAgICAgICAgICAgIGlmICghZXNjYXBlQ2hhciB8fCBjaCA9PT0gJ1wiJykge1xyXG4gICAgICAgICAgICAgICAgc3RyICs9IGNoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjaCA9PT0gXCJcXFxcXCIpIHtcclxuICAgICAgICAgICAgICAgIGVzY2FwZUNoYXIgPSB0cnVlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZXNjYXBlQ2hhciA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50Q3VySW5kZXgoMSk7XHJcbiAgICAgICAgICAgIGNoID0gdGhpcy5nZXRDdXJDaGFyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZ3JhYlRva2VuKCdcIicsIFRva2VuVHlwZS5ET1VCTEVfUVVPVEVfVEtOKTtcclxuICAgICAgICBsZXQgdGtuID0gdGhpcy5tYWtlVG9rZW4oJ1wiJyArIHN0ciArICdcIicsIFRva2VuVHlwZS5TVFJJTkdfTElURVJBTF9US04pO1xyXG4gICAgICAgIHRrbi52YWx1ZSA9IHN0cjtcclxuICAgICAgICByZXR1cm4gdGtuO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBncmFiSWRlbnRpZmllcigpOiBUb2tlbiB7XHJcbiAgICAgICAgbGV0IHN0ciA9IFwiXCI7XHJcbiAgICAgICAgbGV0IGNoID0gdGhpcy5nZXRDdXJDaGFyKCk7XHJcbiAgICAgICAgd2hpbGUgKHRoaXMuaXNMZXR0ZXIoY2gpIHx8IHRoaXMuaXNOdW1iZXIoY2gpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaW5jcmVtZW50Q3VySW5kZXgoMSk7XHJcbiAgICAgICAgICAgIHN0ciA9IHN0ciArIGNoO1xyXG4gICAgICAgICAgICBjaCA9IHRoaXMuZ2V0Q3VyQ2hhcigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBzd2l0Y2ggKHN0cikge1xyXG4gICAgICAgICAgICBjYXNlIFwidHlwZVwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKFwidHlwZVwiLCBUb2tlblR5cGUuVFlQRV9US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwibW9kdWxlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJtb2R1bGVcIiwgVG9rZW5UeXBlLk1PRFVMRV9US04pO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBcImZvclwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKFwiZm9yXCIsIFRva2VuVHlwZS5GT1JfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcIndoaWxlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJ3aGlsZVwiLCBUb2tlblR5cGUuV0hJTEVfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcImJyZWFrXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJicmVha1wiLCBUb2tlblR5cGUuQlJFQUtfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcImNvbnRpbnVlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJjb250aW51ZVwiLCBUb2tlblR5cGUuQ09OVElOVUVfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcImlmXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJpZlwiLCBUb2tlblR5cGUuSUZfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcImVsc2VcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1ha2VUb2tlbihcImVsc2VcIiwgVG9rZW5UeXBlLkVMU0VfVEtOKTtcclxuXHJcbiAgICAgICAgICAgIC8vQml0d2lzZSBPcGVyYXRvcnNcclxuICAgICAgICAgICAgY2FzZSBcIm9yXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJvclwiLCBUb2tlblR5cGUuQklOX09SX1RLTik7XHJcbiAgICAgICAgICAgIGNhc2UgXCJhbmRcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1ha2VUb2tlbihcImFuZFwiLCBUb2tlblR5cGUuQklOX0FORF9US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwieG9yXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJ4b3JcIiwgVG9rZW5UeXBlLkJJTl9YT1JfVEtOKTtcclxuXHJcbiAgICAgICAgICAgIC8vQ29uZGl0aW9uYWxzXHJcbiAgICAgICAgICAgIGNhc2UgXCJ0cnVlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJ0cnVlXCIsIFRva2VuVHlwZS5DT05EX1RSVUVfVEtOKTtcclxuICAgICAgICAgICAgY2FzZSBcImZhbHNlXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJmYWxzZVwiLCBUb2tlblR5cGUuQ09ORF9GQUxTRV9US04pO1xyXG5cclxuICAgICAgICAgICAgLy9UeXBlc1xyXG4gICAgICAgICAgICBjYXNlIFwidm9pZFwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKFwidm9pZFwiLCBUb2tlblR5cGUuVk9JRF9US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwibnVtXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJudW1cIiwgVG9rZW5UeXBlLk5VTV9US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwic3RyaW5nXCI6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5tYWtlVG9rZW4oXCJzdHJpbmdcIiwgVG9rZW5UeXBlLlNUUklOR19US04pO1xyXG4gICAgICAgICAgICBjYXNlIFwiYm9vbFwiOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKFwiYm9vbFwiLCBUb2tlblR5cGUuQk9PTF9US04pO1xyXG5cclxuICAgICAgICAgICAgLy8gZnVuY3Rpb25zXHJcbiAgICAgICAgICAgIGNhc2UgXCJyZXR1cm5cIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1ha2VUb2tlbihcInJldHVyblwiLCBUb2tlblR5cGUuUkVUVVJOX1RLTik7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZVRva2VuKHN0ciwgVG9rZW5UeXBlLklERU5USUZJRVJfVEtOKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGNvbnN1bWVTaW5nbGVMaW5lQ29tbWVudCgpIHtcclxuICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDIpO1xyXG4gICAgICAgIHdoaWxlICh0aGlzLmN1ckluZGV4IDwgdGhpcy5wcmdtU3RyaW5nLmxlbmd0aCAmJiB0aGlzLmdldEN1ckNoYXIoKSAhPT0gXCJcXG5cIikge1xyXG4gICAgICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHByaXZhdGUgY29uc3VtZUJsb2NrQ29tbWVudCgpIHtcclxuICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDIpO1xyXG4gICAgICAgIHdoaWxlICh0aGlzLmN1ckluZGV4IDwgdGhpcy5wcmdtU3RyaW5nLmxlbmd0aCAmJiAhKHRoaXMuZ2V0Q3VyQ2hhcigpID09PSBcIipcIiAmJiB0aGlzLmdldE5leHRDaGFyKCkgPT09IFwiL1wiKSkge1xyXG4gICAgICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmluY3JlbWVudEN1ckluZGV4KDIpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBpc1doaXRlc3BhY2UoY2g6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBjaCA9PT0gXCIgXCIgfHwgY2ggPT09IFwiXFx0XCIgfHwgY2ggPT09IFwiXFxyXCIgfHwgY2ggPT09IFwiXFxuXCI7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIGlzTGV0dGVyKGNoOiBzdHJpbmcpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgbiA9IGNoLmNoYXJDb2RlQXQoMCk7XHJcbiAgICAgICAgcmV0dXJuIChuID49IDY1ICYmIG4gPCA5MSkgfHwgKG4gPj0gOTcgJiYgbiA8IDEyMykgfHwgY2ggPT09IFwiJ1wiIHx8IGNoID09PSBcIl9cIjtcclxuICAgIH1cclxuICAgIHByaXZhdGUgaXNOdW1iZXIoY2g6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBuID0gY2guY2hhckNvZGVBdCgwKTtcclxuICAgICAgICByZXR1cm4gKG4gPj0gNDggJiYgbiA8PSA1NykgfHwgY2ggPT09IFwiX1wiO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scuft/lang/Lexer.ts\n");

/***/ }),

/***/ "./src/scuft/lang/Parser.ts":
/*!**********************************!*\
  !*** ./src/scuft/lang/Parser.ts ***!
  \**********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Parser\n/* harmony export */ });\n/* harmony import */ var _Ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Ast */ \"./src/scuft/lang/Ast.ts\");\n/* harmony import */ var _TokenType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenType */ \"./src/scuft/lang/TokenType.ts\");\n\r\n\r\nclass Parser {\r\n    constructor(lexer) {\r\n        this.lexer = lexer;\r\n    }\r\n    checkToken(type) {\r\n        return this.lexer.peekToken().type === type;\r\n    }\r\n    assertToken(type, msg) {\r\n        let tkn = this.lexer.peekToken();\r\n        if (tkn.type !== type) {\r\n            let error;\r\n        }\r\n    }\r\n    parseProgram() {\r\n        let prgmAST = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTProgram();\r\n        while (this.lexer.peekToken().type != _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.END_TKN) {\r\n            switch (this.lexer.peekToken().type) {\r\n                default:\r\n                    prgmAST.statements.push(this.parseStatement());\r\n            }\r\n        }\r\n        return prgmAST;\r\n    }\r\n    parseBlock() {\r\n        let block = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTBlock();\r\n        this.assertToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_CURLY_TKN);\r\n        this.lexer.nextToken();\r\n        while (!this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_CURLY_TKN)) {\r\n            block.statements.push(this.parseStatement());\r\n        }\r\n        this.lexer.nextToken();\r\n        return block;\r\n    }\r\n    parseStatement() {\r\n        let tkn = this.lexer.peekToken();\r\n        let statement;\r\n        switch (tkn.type) {\r\n            case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.IDENTIFIER_TKN:\r\n                statement = this.parseDeclaration();\r\n                break;\r\n            default:\r\n                this.lexer.parseErr.errToken(\"Invalid statement\", tkn);\r\n        }\r\n        this.assertToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.SEMI_COLON_TKN, \"No semi-colon at statement end\");\r\n        this.lexer.nextToken();\r\n        return statement;\r\n    }\r\n    parseDeclaration() {\r\n        let declaration = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTDeclaration();\r\n        declaration.lvalue = this.lexer.nextToken();\r\n        if (this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COLON_TKN)) {\r\n            this.lexer.nextToken();\r\n            declaration.type = this.parseType();\r\n        }\r\n        if (this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.ASSIGNMENT_TKN)) {\r\n            this.lexer.nextToken();\r\n            if (this.lexer.lookAheadToken(3).type === _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COLON_TKN) {\r\n                declaration.rvalue = this.parseFunction();\r\n            }\r\n            else {\r\n                declaration.rvalue = this.parseExpression();\r\n            }\r\n        }\r\n        return declaration;\r\n    }\r\n    parseType() {\r\n        let astType = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTType();\r\n        if (this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_PARENS_TKN)) {\r\n            this.lexer.nextToken();\r\n            astType.inputType = [];\r\n            while (!this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_PARENS_TKN)) {\r\n                if (!this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COMMA_TKN)) {\r\n                    astType.inputType.push(this.parseType());\r\n                }\r\n                else {\r\n                    this.lexer.nextToken();\r\n                }\r\n            }\r\n            this.lexer.nextToken();\r\n            this.assertToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.FUNC_MAPPING_TKN);\r\n            this.lexer.nextToken();\r\n            astType.outType = this.parseType();\r\n        }\r\n        else {\r\n            let tkn = this.lexer.nextToken();\r\n            switch (tkn.type) {\r\n                case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.NUM_TKN:\r\n                case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.STRING_TKN:\r\n                case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.BOOL_TKN:\r\n                case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.VOID_TKN:\r\n                case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.IDENTIFIER_TKN:\r\n                    astType.type = tkn;\r\n                    break;\r\n                default:\r\n                    this.lexer.parseErr.errToken(\"Invalid type\", tkn);\r\n            }\r\n        }\r\n        return astType;\r\n    }\r\n    parseFunction() {\r\n        let func = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTFunction();\r\n        func.paramDeclaration = [];\r\n        this.assertToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.LEFT_PARENS_TKN);\r\n        this.lexer.nextToken();\r\n        while (!this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.RIGHT_PARENS_TKN)) {\r\n            if (!this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.COMMA_TKN)) {\r\n                func.paramDeclaration.push(this.parseDeclaration());\r\n            }\r\n            else {\r\n                this.lexer.nextToken();\r\n            }\r\n        }\r\n        this.lexer.nextToken();\r\n        if (this.checkToken(_TokenType__WEBPACK_IMPORTED_MODULE_1__.default.FUNC_MAPPING_TKN)) {\r\n            this.lexer.nextToken();\r\n            func.returnType = this.parseType();\r\n        }\r\n        func.block = this.parseBlock();\r\n        return func;\r\n    }\r\n    parseExpression() {\r\n        let tkn = this.lexer.peekToken();\r\n        switch (tkn.type) {\r\n            case _TokenType__WEBPACK_IMPORTED_MODULE_1__.default.NUMERIC_LITERAL_TKN:\r\n                let literal = new _Ast__WEBPACK_IMPORTED_MODULE_0__.ASTNumericLiteral();\r\n                literal.value = this.lexer.nextToken();\r\n                return literal;\r\n            default:\r\n                this.lexer.parseErr.errToken(\"Invalid expression\", tkn);\r\n        }\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL1BhcnNlci50cz9kMDI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUU2QjtBQUNPO0FBcUJyQixNQUFNLE1BQU07SUFFdkIsWUFBWSxLQUFZO1FBQ3BCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRXZCLENBQUM7SUFDTyxVQUFVLENBQUMsSUFBZTtRQUM5QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztJQUNoRCxDQUFDO0lBQ08sV0FBVyxDQUFDLElBQWUsRUFBRSxHQUFZO1FBQzdDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDakMsSUFBSSxHQUFHLENBQUMsSUFBSSxLQUFLLElBQUksRUFBRTtZQUNuQixJQUFJLEtBQUssQ0FBQztTQW1CYjtJQUNMLENBQUM7SUFZRCxZQUFZO1FBQ1IsSUFBSSxPQUFPLEdBQUcsSUFBSSw0Q0FBYyxFQUFFLENBQUM7UUFDbkMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksSUFBSSx1REFBaUIsRUFBRTtZQUVyRCxRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxFQUFFO2dCQUNqQztvQkFDSSxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQzthQUN0RDtTQUNKO1FBQ0QsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUNPLFVBQVU7UUFDZCxJQUFJLEtBQUssR0FBRyxJQUFJLDBDQUFZLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsV0FBVyxDQUFDLDhEQUF3QixDQUFDLENBQUM7UUFDM0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN2QixPQUFPLENBQUMsSUFB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QUFHLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUN0QztRQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBRS9CLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFDTyxlQUFlO1FBQ25CLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDakMsUUFBUSxHQUFHLENBQUMsSUFBSSxFQUFFO1lBQ2QsS0FBSyxtRUFBNkI7Z0JBQzlCLElBQUksT0FBTyxHQUFHLElBQUksbURBQXFCLEVBQUUsQ0FBQztnQkFDMUMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO2dCQUN2QyxPQUFPLE9BQU8sQ0FBQztZQUNuQjtnQkFDSSxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDL0Q7SUFDTCxDQUFDO0NBQ0oiLCJmaWxlIjoiLi9zcmMvc2N1ZnQvbGFuZy9QYXJzZXIudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGV4ZXIgZnJvbSBcIi4vTGV4ZXJcIjtcclxuXHJcbmltcG9ydCAqIGFzIEFTVCBmcm9tIFwiLi9Bc3RcIjtcclxuaW1wb3J0IFRva2VuVHlwZSBmcm9tIFwiLi9Ub2tlblR5cGVcIjtcclxuaW1wb3J0IFRva2VuIGZyb20gXCIuL1Rva2VuXCI7XHJcblxyXG4vLyBjbGFzcyBQYXJzZUVyckhhbmRsZXIge1xyXG4vLyAgICAgcHJpdmF0ZSBpbnB1dFN0cmluZzogc3RyaW5nO1xyXG4vLyAgICAgcHJpdmF0ZSBsaW5lTnVtOiBudW1iZXIgPSAxO1xyXG4vLyAgICAgcHJpdmF0ZSBsaW5lQ2FjaGU6IHN0cmluZyA9IFwiXCI7XHJcbi8vICAgICBwcml2YXRlIGxhc3RUb2tlbiE6IFRva2VuO1xyXG4vLyAgICAgY29uc3RydWN0b3IoaW5wdXRTdHJpbmc6IHN0cmluZykge1xyXG4vLyAgICAgICAgIHRoaXMuaW5wdXRTdHJpbmcgPSBpbnB1dFN0cmluZztcclxuLy8gICAgIH1cclxuLy8gICAgIGVycihtc2c6IHN0cmluZywgdG9rZW46IFRva2VuKTogbmV2ZXIge1xyXG4vLyAgICAgICAgIGxldCBlcnJvciA9IFwiKGxpbmU6XCIgKyB0aGlzLmxhc3RUb2tlbi5saW5lICsgXCIsIGNvbDpcIiArIHRoaXMubGFzdFRva2VuLmNvbCArIFwiKTogXCIgKyBtc2cgKyBcIlxcblwiO1xyXG4vLyAgICAgICAgIGVycm9yICs9IFwiXFxuXCI7XHJcbi8vICAgICAgICAgZXJyb3IgKz0gXCJcXHRcIiArIHRoaXMubGluZUNhY2hlO1xyXG4vLyAgICAgICAgIGVycm9yICs9IFwiXFxuXCI7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2cobmV3IFNjdWZ0RXJyb3IoZXJyb3IpKTtcclxuLy8gICAgICAgICB0aHJvdyBcIlwiO1xyXG4vLyAgICAgfVxyXG4vLyB9XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYXJzZXIge1xyXG4gICAgcHJpdmF0ZSBsZXhlcjogTGV4ZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihsZXhlcjogTGV4ZXIpIHtcclxuICAgICAgICB0aGlzLmxleGVyID0gbGV4ZXI7XHJcbiAgICAgICAgLy8gdGhpcy5wRXJyID0gbmV3IFBhcnNlRXJySGFuZGxlcih0aGlzLmxleGVyKTtcclxuICAgIH1cclxuICAgIHByaXZhdGUgY2hlY2tUb2tlbih0eXBlOiBUb2tlblR5cGUpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5sZXhlci5wZWVrVG9rZW4oKS50eXBlID09PSB0eXBlO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBhc3NlcnRUb2tlbih0eXBlOiBUb2tlblR5cGUsIG1zZz86IHN0cmluZykge1xyXG4gICAgICAgIGxldCB0a24gPSB0aGlzLmxleGVyLnBlZWtUb2tlbigpO1xyXG4gICAgICAgIGlmICh0a24udHlwZSAhPT0gdHlwZSkge1xyXG4gICAgICAgICAgICBsZXQgZXJyb3I7XHJcbiAgICAgICAgICAgIC8vIGlmIChtc2cpIHtcclxuICAgICAgICAgICAgLy8gICAgIGVycm9yID0gZm10RXJyb3IoXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgXCJFeHBlY3RlZCBcIiArIFRva2VuVHlwZVt0eXBlXSArIFwiIGJ1dCBnb3QgXCIgKyB0a24uc3RyaW5nVmFsdWUgKyBcIiBpbnN0ZWFkOiBcIiArIG1zZyxcclxuICAgICAgICAgICAgLy8gICAgICAgICB0a24ubGluZSxcclxuICAgICAgICAgICAgLy8gICAgICAgICB0a24uY29sXHJcbiAgICAgICAgICAgIC8vICAgICApO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgZXJyb3IgPSBmbXRFcnJvcihcclxuICAgICAgICAgICAgLy8gICAgICAgICBcIkV4cGVjdGVkIFwiICsgVG9rZW5UeXBlW3R5cGVdICsgXCIgYnV0IGdvdCBcIiArIHRrbi5zdHJpbmdWYWx1ZSArIFwiIGluc3RlYWRcIixcclxuICAgICAgICAgICAgLy8gICAgICAgICB0a24ubGluZSxcclxuICAgICAgICAgICAgLy8gICAgICAgICB0a24uY29sXHJcbiAgICAgICAgICAgIC8vICAgICApO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIC8vIGlmIChPcHRpb25zLkZBSUxfRkFTVCkge1xyXG4gICAgICAgICAgICAvLyAgICAgdGhyb3cgZXJyb3I7XHJcbiAgICAgICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vICAgICB0aGlzLmVycm9ycy5wdXNoKGVycm9yKTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIHByaXZhdGUgcEVycihtc2c6IHN0cmluZyk6IG5ldmVyIHtcclxuICAgIC8vICAgICB0aHJvdyB0aGlzLm1ha2VQYXJzZUVycm9yKG1zZyk7XHJcbiAgICAvLyB9XHJcbiAgICAvLyBwcml2YXRlIG1ha2VQYXJzZUVycm9yKG1zZzogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgIC8vICAgICBsZXQgdG9rZW4gPSB0aGlzLmxleGVyLnBlZWtUb2tlbigpO1xyXG4gICAgLy8gICAgIGxldCBlcnJvciA9IFwiKGxpbmU6XCIgKyB0b2tlbi5saW5lICsgXCIsIGNvbDpcIiArIHRva2VuLmNvbCArIFwiKTogXCIgKyBtc2cgKyBcIlxcblwiO1xyXG4gICAgLy8gICAgIGVycm9yICs9IHRva2VuLmxpbmUgLSAxICsgXCJcXG5cIjtcclxuICAgIC8vICAgICBlcnJvciArPSB0b2tlbi5saW5lICsgXCJcXHRcIiArIHRva2VuLnN0cmluZ1ZhbHVlICsgXCJcXG5cIjtcclxuICAgIC8vICAgICBlcnJvciArPSB0b2tlbi5saW5lICsgMSArIFwiXFxuXCI7XHJcbiAgICAvLyAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgLy8gfVxyXG4gICAgcGFyc2VQcm9ncmFtKCk6IEFTVC5BU1RQcm9ncmFtIHtcclxuICAgICAgICBsZXQgcHJnbUFTVCA9IG5ldyBBU1QuQVNUUHJvZ3JhbSgpO1xyXG4gICAgICAgIHdoaWxlICh0aGlzLmxleGVyLnBlZWtUb2tlbigpLnR5cGUgIT0gVG9rZW5UeXBlLkVORF9US04pIHtcclxuICAgICAgICAgICAgLy9UT0RPIGNoZWNrIG90aGVyIHR5cGVzIG9mIG5vZGVzIGluY2x1ZGluZyBcInR5cGVzXCIgYW5kIFwibW9kdWxlc1wiXHJcbiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5sZXhlci5wZWVrVG9rZW4oKS50eXBlKSB7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgIHByZ21BU1Quc3RhdGVtZW50cy5wdXNoKHRoaXMucGFyc2VTdGF0ZW1lbnQoKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHByZ21BU1Q7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHBhcnNlQmxvY2soKTogQVNULkFTVEJsb2NrIHtcclxuICAgICAgICBsZXQgYmxvY2sgPSBuZXcgQVNULkFTVEJsb2NrKCk7XHJcbiAgICAgICAgdGhpcy5hc3NlcnRUb2tlbihUb2tlblR5cGUuTEVGVF9DVVJMWV9US04pO1xyXG4gICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgd2hpbGUgKCF0aGlzLmNoZWNrVG9rZW4oVG9rZW5UeXBlLlJJR0hUX0NVUkxZX1RLTikpIHtcclxuICAgICAgICAgICAgYmxvY2suc3RhdGVtZW50cy5wdXNoKHRoaXMucGFyc2VTdGF0ZW1lbnQoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7IC8vUmlnaHQgY3VybHlcclxuICAgICAgICByZXR1cm4gYmxvY2s7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHBhcnNlU3RhdGVtZW50KCk6IEFTVC5BU1RTdGF0ZW1lbnQge1xyXG4gICAgICAgIGxldCB0a24gPSB0aGlzLmxleGVyLnBlZWtUb2tlbigpO1xyXG5cclxuICAgICAgICBsZXQgc3RhdGVtZW50O1xyXG4gICAgICAgIHN3aXRjaCAodGtuLnR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBUb2tlblR5cGUuSURFTlRJRklFUl9US046XHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPIGhhdmUgdG8gY2hlY2sgbmV4dCB0b2tlbiBnZW5lcmFsbHlcclxuICAgICAgICAgICAgICAgIHN0YXRlbWVudCA9IHRoaXMucGFyc2VEZWNsYXJhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxleGVyLnBhcnNlRXJyLmVyclRva2VuKFwiSW52YWxpZCBzdGF0ZW1lbnRcIiwgdGtuKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hc3NlcnRUb2tlbihUb2tlblR5cGUuU0VNSV9DT0xPTl9US04sIFwiTm8gc2VtaS1jb2xvbiBhdCBzdGF0ZW1lbnQgZW5kXCIpO1xyXG4gICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgcmV0dXJuIHN0YXRlbWVudDtcclxuICAgIH1cclxuICAgIHByaXZhdGUgcGFyc2VEZWNsYXJhdGlvbigpOiBBU1QuQVNURGVjbGFyYXRpb24ge1xyXG4gICAgICAgIGxldCBkZWNsYXJhdGlvbiA9IG5ldyBBU1QuQVNURGVjbGFyYXRpb24oKTtcclxuICAgICAgICBkZWNsYXJhdGlvbi5sdmFsdWUgPSB0aGlzLmxleGVyLm5leHRUb2tlbigpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5jaGVja1Rva2VuKFRva2VuVHlwZS5DT0xPTl9US04pKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uLnR5cGUgPSB0aGlzLnBhcnNlVHlwZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jaGVja1Rva2VuKFRva2VuVHlwZS5BU1NJR05NRU5UX1RLTikpIHtcclxuICAgICAgICAgICAgdGhpcy5sZXhlci5uZXh0VG9rZW4oKTtcclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmxleGVyLmxvb2tBaGVhZFRva2VuKDMpLnR5cGUgPT09IFRva2VuVHlwZS5DT0xPTl9US04pIHtcclxuICAgICAgICAgICAgICAgIGRlY2xhcmF0aW9uLnJ2YWx1ZSA9IHRoaXMucGFyc2VGdW5jdGlvbigpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZGVjbGFyYXRpb24ucnZhbHVlID0gdGhpcy5wYXJzZUV4cHJlc3Npb24oKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGVjbGFyYXRpb247XHJcbiAgICB9XHJcbiAgICAvLyBsZXQgYTogKG51bSwgbnVtKSAtPiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBwYXJzZVR5cGUoKTogQVNULkFTVFR5cGUge1xyXG4gICAgICAgIGxldCBhc3RUeXBlID0gbmV3IEFTVC5BU1RUeXBlKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tUb2tlbihUb2tlblR5cGUuTEVGVF9QQVJFTlNfVEtOKSkge1xyXG4gICAgICAgICAgICB0aGlzLmxleGVyLm5leHRUb2tlbigpO1xyXG4gICAgICAgICAgICBhc3RUeXBlLmlucHV0VHlwZSA9IFtdO1xyXG4gICAgICAgICAgICB3aGlsZSAoIXRoaXMuY2hlY2tUb2tlbihUb2tlblR5cGUuUklHSFRfUEFSRU5TX1RLTikpIHtcclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5jaGVja1Rva2VuKFRva2VuVHlwZS5DT01NQV9US04pKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXN0VHlwZS5pbnB1dFR5cGUucHVzaCh0aGlzLnBhcnNlVHlwZSgpKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZXhlci5uZXh0VG9rZW4oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmxleGVyLm5leHRUb2tlbigpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5hc3NlcnRUb2tlbihUb2tlblR5cGUuRlVOQ19NQVBQSU5HX1RLTik7XHJcbiAgICAgICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgICAgIGFzdFR5cGUub3V0VHlwZSA9IHRoaXMucGFyc2VUeXBlKCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IHRrbiA9IHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgICAgIHN3aXRjaCAodGtuLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgVG9rZW5UeXBlLk5VTV9US046XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRva2VuVHlwZS5TVFJJTkdfVEtOOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBUb2tlblR5cGUuQk9PTF9US046XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRva2VuVHlwZS5WT0lEX1RLTjpcclxuICAgICAgICAgICAgICAgIGNhc2UgVG9rZW5UeXBlLklERU5USUZJRVJfVEtOOlxyXG4gICAgICAgICAgICAgICAgICAgIGFzdFR5cGUudHlwZSA9IHRrbjtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sZXhlci5wYXJzZUVyci5lcnJUb2tlbihcIkludmFsaWQgdHlwZVwiLCB0a24pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBhc3RUeXBlO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBwYXJzZUZ1bmN0aW9uKCk6IEFTVC5BU1RGdW5jdGlvbiB7XHJcbiAgICAgICAgbGV0IGZ1bmMgPSBuZXcgQVNULkFTVEZ1bmN0aW9uKCk7XHJcblxyXG4gICAgICAgIGZ1bmMucGFyYW1EZWNsYXJhdGlvbiA9IFtdO1xyXG5cclxuICAgICAgICB0aGlzLmFzc2VydFRva2VuKFRva2VuVHlwZS5MRUZUX1BBUkVOU19US04pO1xyXG4gICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgd2hpbGUgKCF0aGlzLmNoZWNrVG9rZW4oVG9rZW5UeXBlLlJJR0hUX1BBUkVOU19US04pKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5jaGVja1Rva2VuKFRva2VuVHlwZS5DT01NQV9US04pKSB7XHJcbiAgICAgICAgICAgICAgICBmdW5jLnBhcmFtRGVjbGFyYXRpb24ucHVzaCh0aGlzLnBhcnNlRGVjbGFyYXRpb24oKSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxleGVyLm5leHRUb2tlbigpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNoZWNrVG9rZW4oVG9rZW5UeXBlLkZVTkNfTUFQUElOR19US04pKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgICAgIGZ1bmMucmV0dXJuVHlwZSA9IHRoaXMucGFyc2VUeXBlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jLmJsb2NrID0gdGhpcy5wYXJzZUJsb2NrKCk7XHJcblxyXG4gICAgICAgIHJldHVybiBmdW5jO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBwYXJzZUV4cHJlc3Npb24oKTogQVNULkFTVE51bUV4cHJlc3Npb24ge1xyXG4gICAgICAgIGxldCB0a24gPSB0aGlzLmxleGVyLnBlZWtUb2tlbigpO1xyXG4gICAgICAgIHN3aXRjaCAodGtuLnR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBUb2tlblR5cGUuTlVNRVJJQ19MSVRFUkFMX1RLTjpcclxuICAgICAgICAgICAgICAgIGxldCBsaXRlcmFsID0gbmV3IEFTVC5BU1ROdW1lcmljTGl0ZXJhbCgpO1xyXG4gICAgICAgICAgICAgICAgbGl0ZXJhbC52YWx1ZSA9IHRoaXMubGV4ZXIubmV4dFRva2VuKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbGl0ZXJhbDtcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIHRoaXMubGV4ZXIucGFyc2VFcnIuZXJyVG9rZW4oXCJJbnZhbGlkIGV4cHJlc3Npb25cIiwgdGtuKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scuft/lang/Parser.ts\n");

/***/ }),

/***/ "./src/scuft/lang/ScuftTest.ts":
/*!*************************************!*\
  !*** ./src/scuft/lang/ScuftTest.ts ***!
  \*************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* export default binding */ __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _Lexer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Lexer */ \"./src/scuft/lang/Lexer.ts\");\n/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Parser */ \"./src/scuft/lang/Parser.ts\");\n/* harmony import */ var _test_1_SimpleTest_scft__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../test/1-SimpleTest.scft */ \"./src/scuft/test/1-SimpleTest.scft\");\n/* harmony import */ var _test_2_LiteralTest_scft__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../test/2-LiteralTest.scft */ \"./src/scuft/test/2-LiteralTest.scft\");\n/* harmony import */ var _test_3_TypeTest_scft__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../test/3-TypeTest.scft */ \"./src/scuft/test/3-TypeTest.scft\");\n/* harmony import */ var _TestFile_scft__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./TestFile.scft */ \"./src/scuft/lang/TestFile.scft\");\n/* harmony import */ var _Ast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Ast */ \"./src/scuft/lang/Ast.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\r\n    function testString(input) {\r\n        let parser = new _Parser__WEBPACK_IMPORTED_MODULE_1__.default(new _Lexer__WEBPACK_IMPORTED_MODULE_0__.default(input));\r\n        let prgm = parser.parseProgram();\r\n        console.log(prgm);\r\n        _Ast__WEBPACK_IMPORTED_MODULE_6__.printAST(prgm);\r\n        console.log(\"---------------------\");\r\n    }\r\n    testString(_test_1_SimpleTest_scft__WEBPACK_IMPORTED_MODULE_2__.default);\r\n    testString(_test_2_LiteralTest_scft__WEBPACK_IMPORTED_MODULE_3__.default);\r\n    testString(_test_3_TypeTest_scft__WEBPACK_IMPORTED_MODULE_4__.default);\r\n    testString(_TestFile_scft__WEBPACK_IMPORTED_MODULE_5__.default);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL1NjdWZ0VGVzdC50cz8wYjQ4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0U7QUFFcUI7QUFDRTtBQUNOO0FBRVI7QUFFTDtBQUVsQyw2QkFBZSxzQ0FBWTtJQUN2QixTQUFTLFVBQVUsQ0FBQyxLQUFhO1FBSTdCLElBQUksTUFBTSxHQUFHLElBQUksNENBQU0sQ0FBQyxJQUFJLDJDQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMxQyxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVsQiwwQ0FBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUV4QixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUM7SUFDekMsQ0FBQztJQUNELFVBQVUsQ0FBQyw0REFBVSxDQUFDLENBQUM7SUFDdkIsVUFBVSxDQUFDLDZEQUFXLENBQUMsQ0FBQztJQUN4QixVQUFVLENBQUMsMERBQVEsQ0FBQyxDQUFDO0lBQ3JCLFVBQVUsQ0FBQyxtREFBUSxDQUFDLENBQUM7QUFHekIsQ0FBQyIsImZpbGUiOiIuL3NyYy9zY3VmdC9sYW5nL1NjdWZ0VGVzdC50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMZXhlciBmcm9tIFwiLi9MZXhlclwiO1xyXG5pbXBvcnQgUGFyc2VyIGZyb20gXCIuL1BhcnNlclwiO1xyXG5cclxuaW1wb3J0IHNpbXBsZVRlc3QgZnJvbSBcIi4uL3Rlc3QvMS1TaW1wbGVUZXN0LnNjZnRcIjtcclxuaW1wb3J0IGxpdGVyYWxUZXN0IGZyb20gXCIuLi90ZXN0LzItTGl0ZXJhbFRlc3Quc2NmdFwiO1xyXG5pbXBvcnQgdHlwZVRlc3QgZnJvbSBcIi4uL3Rlc3QvMy1UeXBlVGVzdC5zY2Z0XCI7XHJcblxyXG5pbXBvcnQgdGVzdEZpbGUgZnJvbSBcIi4vVGVzdEZpbGUuc2NmdFwiO1xyXG5cclxuaW1wb3J0ICogYXMgQVNURGVidWcgZnJvbSBcIi4vQXN0XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiB0ZXN0U3RyaW5nKGlucHV0OiBzdHJpbmcpIHtcclxuICAgICAgICAvLyBsZXQgbGV4ZXIgPSBuZXcgTGV4ZXIoaW5wdXQpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGxleGVyLmxleCgpKTtcclxuXHJcbiAgICAgICAgbGV0IHBhcnNlciA9IG5ldyBQYXJzZXIobmV3IExleGVyKGlucHV0KSk7XHJcbiAgICAgICAgbGV0IHByZ20gPSBwYXJzZXIucGFyc2VQcm9ncmFtKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2cocHJnbSk7XHJcblxyXG4gICAgICAgIEFTVERlYnVnLnByaW50QVNUKHByZ20pO1xyXG5cclxuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLVwiKTtcclxuICAgIH1cclxuICAgIHRlc3RTdHJpbmcoc2ltcGxlVGVzdCk7XHJcbiAgICB0ZXN0U3RyaW5nKGxpdGVyYWxUZXN0KTtcclxuICAgIHRlc3RTdHJpbmcodHlwZVRlc3QpO1xyXG4gICAgdGVzdFN0cmluZyh0ZXN0RmlsZSk7XHJcblxyXG4gICAgLy8gdGVzdFN0cmluZyhcImIyID0gKGE6IG51bSwgYjogbnVtKSAtPiBudW0ge307XCIpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scuft/lang/ScuftTest.ts\n");

/***/ }),

/***/ "./src/scuft/lang/Token.ts":
/*!*********************************!*\
  !*** ./src/scuft/lang/Token.ts ***!
  \*********************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Token\n/* harmony export */ });\nclass Token {\r\n    constructor(stringValue, line, col, type) {\r\n        this.stringValue = stringValue;\r\n        this.line = line;\r\n        this.col = col;\r\n        this.type = type;\r\n    }\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL1Rva2VuLnRzP2NiNDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVlLE1BQU0sS0FBSztJQVV0QixZQUFZLFdBQW1CLEVBQUUsSUFBWSxFQUFFLEdBQVcsRUFBRSxJQUFlO1FBQ3ZFLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBRS9CLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBRWYsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztDQUNKIiwiZmlsZSI6Ii4vc3JjL3NjdWZ0L2xhbmcvVG9rZW4udHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVG9rZW5UeXBlIGZyb20gXCIuL1Rva2VuVHlwZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9rZW4ge1xyXG4gICAgc3RyaW5nVmFsdWU6IHN0cmluZzsgLy8gc3RyaW5nIG9mIHRva2VuIGluIHdyaXR0ZW4gcHJvZ3JhbVxyXG5cclxuICAgIGxpbmU6IG51bWJlcjtcclxuICAgIGNvbDogbnVtYmVyO1xyXG5cclxuICAgIHR5cGU6IFRva2VuVHlwZTtcclxuXHJcbiAgICB2YWx1ZSE6IG51bWJlciB8IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihzdHJpbmdWYWx1ZTogc3RyaW5nLCBsaW5lOiBudW1iZXIsIGNvbDogbnVtYmVyLCB0eXBlOiBUb2tlblR5cGUpIHtcclxuICAgICAgICB0aGlzLnN0cmluZ1ZhbHVlID0gc3RyaW5nVmFsdWU7XHJcblxyXG4gICAgICAgIHRoaXMubGluZSA9IGxpbmU7XHJcbiAgICAgICAgdGhpcy5jb2wgPSBjb2w7XHJcblxyXG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scuft/lang/Token.ts\n");

/***/ }),

/***/ "./src/scuft/lang/TokenType.ts":
/*!*************************************!*\
  !*** ./src/scuft/lang/TokenType.ts ***!
  \*************************************/
/*! namespace exports */
/*! export default [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_exports__, __webpack_require__.r, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\nvar TokenType;\r\n(function (TokenType) {\r\n    TokenType[TokenType[\"IDENTIFIER_TKN\"] = 0] = \"IDENTIFIER_TKN\";\r\n    TokenType[TokenType[\"ASSIGNMENT_TKN\"] = 1] = \"ASSIGNMENT_TKN\";\r\n    TokenType[TokenType[\"COLON_TKN\"] = 2] = \"COLON_TKN\";\r\n    TokenType[TokenType[\"NUMERIC_LITERAL_TKN\"] = 3] = \"NUMERIC_LITERAL_TKN\";\r\n    TokenType[TokenType[\"STRING_LITERAL_TKN\"] = 4] = \"STRING_LITERAL_TKN\";\r\n    TokenType[TokenType[\"LEFT_CURLY_TKN\"] = 5] = \"LEFT_CURLY_TKN\";\r\n    TokenType[TokenType[\"RIGHT_CURLY_TKN\"] = 6] = \"RIGHT_CURLY_TKN\";\r\n    TokenType[TokenType[\"LEFT_SQUARE_TKN\"] = 7] = \"LEFT_SQUARE_TKN\";\r\n    TokenType[TokenType[\"RIGHT_SQUARE_TKN\"] = 8] = \"RIGHT_SQUARE_TKN\";\r\n    TokenType[TokenType[\"LEFT_PARENS_TKN\"] = 9] = \"LEFT_PARENS_TKN\";\r\n    TokenType[TokenType[\"RIGHT_PARENS_TKN\"] = 10] = \"RIGHT_PARENS_TKN\";\r\n    TokenType[TokenType[\"FOR_TKN\"] = 11] = \"FOR_TKN\";\r\n    TokenType[TokenType[\"WHILE_TKN\"] = 12] = \"WHILE_TKN\";\r\n    TokenType[TokenType[\"BREAK_TKN\"] = 13] = \"BREAK_TKN\";\r\n    TokenType[TokenType[\"CONTINUE_TKN\"] = 14] = \"CONTINUE_TKN\";\r\n    TokenType[TokenType[\"IF_TKN\"] = 15] = \"IF_TKN\";\r\n    TokenType[TokenType[\"ELSE_TKN\"] = 16] = \"ELSE_TKN\";\r\n    TokenType[TokenType[\"TYPE_TKN\"] = 17] = \"TYPE_TKN\";\r\n    TokenType[TokenType[\"MODULE_TKN\"] = 18] = \"MODULE_TKN\";\r\n    TokenType[TokenType[\"COND_OR_TKN\"] = 19] = \"COND_OR_TKN\";\r\n    TokenType[TokenType[\"COND_AND_TKN\"] = 20] = \"COND_AND_TKN\";\r\n    TokenType[TokenType[\"COND_XOR_TKN\"] = 21] = \"COND_XOR_TKN\";\r\n    TokenType[TokenType[\"COND_NOT_TKN\"] = 22] = \"COND_NOT_TKN\";\r\n    TokenType[TokenType[\"COND_EQUALS_TKN\"] = 23] = \"COND_EQUALS_TKN\";\r\n    TokenType[TokenType[\"COND_NOT_EQUALS_TKN\"] = 24] = \"COND_NOT_EQUALS_TKN\";\r\n    TokenType[TokenType[\"COND_LESS_THAN_TKN\"] = 25] = \"COND_LESS_THAN_TKN\";\r\n    TokenType[TokenType[\"COND_LESS_THAN_EQUAL_TKN\"] = 26] = \"COND_LESS_THAN_EQUAL_TKN\";\r\n    TokenType[TokenType[\"COND_GREATER_THAN_TKN\"] = 27] = \"COND_GREATER_THAN_TKN\";\r\n    TokenType[TokenType[\"COND_GREATER_THAN_EQUAL_TKN\"] = 28] = \"COND_GREATER_THAN_EQUAL_TKN\";\r\n    TokenType[TokenType[\"COND_TRUE_TKN\"] = 29] = \"COND_TRUE_TKN\";\r\n    TokenType[TokenType[\"COND_FALSE_TKN\"] = 30] = \"COND_FALSE_TKN\";\r\n    TokenType[TokenType[\"VOID_TKN\"] = 31] = \"VOID_TKN\";\r\n    TokenType[TokenType[\"NUM_TKN\"] = 32] = \"NUM_TKN\";\r\n    TokenType[TokenType[\"STRING_TKN\"] = 33] = \"STRING_TKN\";\r\n    TokenType[TokenType[\"BOOL_TKN\"] = 34] = \"BOOL_TKN\";\r\n    TokenType[TokenType[\"BIN_OR_TKN\"] = 35] = \"BIN_OR_TKN\";\r\n    TokenType[TokenType[\"BIN_AND_TKN\"] = 36] = \"BIN_AND_TKN\";\r\n    TokenType[TokenType[\"BIN_XOR_TKN\"] = 37] = \"BIN_XOR_TKN\";\r\n    TokenType[TokenType[\"BIN_NOT_TKN\"] = 38] = \"BIN_NOT_TKN\";\r\n    TokenType[TokenType[\"BIN_SHIFT_RIGHT_TKN\"] = 39] = \"BIN_SHIFT_RIGHT_TKN\";\r\n    TokenType[TokenType[\"BIN_SHIFT_ARITHMETIC_RIGHT_TKN\"] = 40] = \"BIN_SHIFT_ARITHMETIC_RIGHT_TKN\";\r\n    TokenType[TokenType[\"BIN_SHIFT_LEFT_TKN\"] = 41] = \"BIN_SHIFT_LEFT_TKN\";\r\n    TokenType[TokenType[\"FUNC_MAPPING_TKN\"] = 42] = \"FUNC_MAPPING_TKN\";\r\n    TokenType[TokenType[\"RETURN_TKN\"] = 43] = \"RETURN_TKN\";\r\n    TokenType[TokenType[\"OP_ADD_TKN\"] = 44] = \"OP_ADD_TKN\";\r\n    TokenType[TokenType[\"OP_SUBTR_TKN\"] = 45] = \"OP_SUBTR_TKN\";\r\n    TokenType[TokenType[\"OP_MULT_TKN\"] = 46] = \"OP_MULT_TKN\";\r\n    TokenType[TokenType[\"OP_DIVIDE_TKN\"] = 47] = \"OP_DIVIDE_TKN\";\r\n    TokenType[TokenType[\"OP_CARROT_TKN\"] = 48] = \"OP_CARROT_TKN\";\r\n    TokenType[TokenType[\"OP_MODULUS_TKN\"] = 49] = \"OP_MODULUS_TKN\";\r\n    TokenType[TokenType[\"OP_BAR_TKN\"] = 50] = \"OP_BAR_TKN\";\r\n    TokenType[TokenType[\"OP_ADD_ADD_TKN\"] = 51] = \"OP_ADD_ADD_TKN\";\r\n    TokenType[TokenType[\"OP_ADD_EQUALS_TKN\"] = 52] = \"OP_ADD_EQUALS_TKN\";\r\n    TokenType[TokenType[\"OP_SUBTR_SUBTR_TKN\"] = 53] = \"OP_SUBTR_SUBTR_TKN\";\r\n    TokenType[TokenType[\"OP_SUBTR_EQUALS_TKN\"] = 54] = \"OP_SUBTR_EQUALS_TKN\";\r\n    TokenType[TokenType[\"OP_MULT_EQUALS_TKN\"] = 55] = \"OP_MULT_EQUALS_TKN\";\r\n    TokenType[TokenType[\"OP_DIV_EQUALS_TKN\"] = 56] = \"OP_DIV_EQUALS_TKN\";\r\n    TokenType[TokenType[\"DOUBLE_QUOTE_TKN\"] = 57] = \"DOUBLE_QUOTE_TKN\";\r\n    TokenType[TokenType[\"DOT_TKN\"] = 58] = \"DOT_TKN\";\r\n    TokenType[TokenType[\"ELLIPSES_TKN\"] = 59] = \"ELLIPSES_TKN\";\r\n    TokenType[TokenType[\"COMMA_TKN\"] = 60] = \"COMMA_TKN\";\r\n    TokenType[TokenType[\"SEMI_COLON_TKN\"] = 61] = \"SEMI_COLON_TKN\";\r\n    TokenType[TokenType[\"UNKNOWN_TKN\"] = 62] = \"UNKNOWN_TKN\";\r\n    TokenType[TokenType[\"END_TKN\"] = 63] = \"END_TKN\";\r\n})(TokenType || (TokenType = {}));\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TokenType);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3VmdC8uL3NyYy9zY3VmdC9sYW5nL1Rva2VuVHlwZS50cz9iNTcyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFLLFNBa0ZKO0FBbEZELFdBQUssU0FBUztJQUVWLDZEQUFjO0lBQ2QsNkRBQWM7SUFDZCxtREFBUztJQUNULHVFQUFtQjtJQUNuQixxRUFBa0I7SUFHbEIsNkRBQWM7SUFDZCwrREFBZTtJQUNmLCtEQUFlO0lBQ2YsaUVBQWdCO0lBQ2hCLCtEQUFlO0lBQ2Ysa0VBQWdCO0lBR2hCLGdEQUFPO0lBQ1Asb0RBQVM7SUFDVCxvREFBUztJQUNULDBEQUFZO0lBQ1osOENBQU07SUFDTixrREFBUTtJQUNSLGtEQUFRO0lBQ1Isc0RBQVU7SUFHVix3REFBVztJQUNYLDBEQUFZO0lBQ1osMERBQVk7SUFDWiwwREFBWTtJQUNaLGdFQUFlO0lBQ2Ysd0VBQW1CO0lBQ25CLHNFQUFrQjtJQUNsQixrRkFBd0I7SUFDeEIsNEVBQXFCO0lBQ3JCLHdGQUEyQjtJQUMzQiw0REFBYTtJQUNiLDhEQUFjO0lBR2Qsa0RBQVE7SUFDUixnREFBTztJQUNQLHNEQUFVO0lBQ1Ysa0RBQVE7SUFHUixzREFBVTtJQUNWLHdEQUFXO0lBQ1gsd0RBQVc7SUFDWCx3REFBVztJQUNYLHdFQUFtQjtJQUNuQiw4RkFBOEI7SUFDOUIsc0VBQWtCO0lBR2xCLGtFQUFnQjtJQUNoQixzREFBVTtJQUdWLHNEQUFVO0lBQ1YsMERBQVk7SUFDWix3REFBVztJQUNYLDREQUFhO0lBQ2IsNERBQWE7SUFDYiw4REFBYztJQUNkLHNEQUFVO0lBQ1YsOERBQWM7SUFDZCxvRUFBaUI7SUFDakIsc0VBQWtCO0lBQ2xCLHdFQUFtQjtJQUNuQixzRUFBa0I7SUFDbEIsb0VBQWlCO0lBR2pCLGtFQUFnQjtJQUNoQixnREFBTztJQUNQLDBEQUFZO0lBQ1osb0RBQVM7SUFDVCw4REFBYztJQUNkLHdEQUFXO0lBQ1gsZ0RBQU87QUFDWCxDQUFDLEVBbEZJLFNBQVMsS0FBVCxTQUFTLFFBa0ZiO0FBRUQsaUVBQWUsU0FBUyxFQUFDIiwiZmlsZSI6Ii4vc3JjL3NjdWZ0L2xhbmcvVG9rZW5UeXBlLnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZW51bSBUb2tlblR5cGUge1xyXG4gICAgLy8gU3RhdGVtZW50c1xyXG4gICAgSURFTlRJRklFUl9US04sXHJcbiAgICBBU1NJR05NRU5UX1RLTixcclxuICAgIENPTE9OX1RLTixcclxuICAgIE5VTUVSSUNfTElURVJBTF9US04sXHJcbiAgICBTVFJJTkdfTElURVJBTF9US04sXHJcblxyXG4gICAgLy8gQmxvY2tzXHJcbiAgICBMRUZUX0NVUkxZX1RLTixcclxuICAgIFJJR0hUX0NVUkxZX1RLTixcclxuICAgIExFRlRfU1FVQVJFX1RLTixcclxuICAgIFJJR0hUX1NRVUFSRV9US04sXHJcbiAgICBMRUZUX1BBUkVOU19US04sXHJcbiAgICBSSUdIVF9QQVJFTlNfVEtOLFxyXG5cclxuICAgIC8vIEtleXdvcmRzXHJcbiAgICBGT1JfVEtOLFxyXG4gICAgV0hJTEVfVEtOLFxyXG4gICAgQlJFQUtfVEtOLFxyXG4gICAgQ09OVElOVUVfVEtOLFxyXG4gICAgSUZfVEtOLFxyXG4gICAgRUxTRV9US04sXHJcbiAgICBUWVBFX1RLTixcclxuICAgIE1PRFVMRV9US04sXHJcblxyXG4gICAgLy8gQ29uZGl0aW9uYWxzXHJcbiAgICBDT05EX09SX1RLTiwgLy8gfHxcclxuICAgIENPTkRfQU5EX1RLTiwgLy8gJiZcclxuICAgIENPTkRfWE9SX1RLTiwgLy8gJCRcclxuICAgIENPTkRfTk9UX1RLTiwgLy8gIVxyXG4gICAgQ09ORF9FUVVBTFNfVEtOLFxyXG4gICAgQ09ORF9OT1RfRVFVQUxTX1RLTixcclxuICAgIENPTkRfTEVTU19USEFOX1RLTixcclxuICAgIENPTkRfTEVTU19USEFOX0VRVUFMX1RLTixcclxuICAgIENPTkRfR1JFQVRFUl9USEFOX1RLTixcclxuICAgIENPTkRfR1JFQVRFUl9USEFOX0VRVUFMX1RLTixcclxuICAgIENPTkRfVFJVRV9US04sXHJcbiAgICBDT05EX0ZBTFNFX1RLTixcclxuXHJcbiAgICAvLyBUeXBlc1xyXG4gICAgVk9JRF9US04sXHJcbiAgICBOVU1fVEtOLFxyXG4gICAgU1RSSU5HX1RLTixcclxuICAgIEJPT0xfVEtOLFxyXG5cclxuICAgIC8vIEJpdHdpc2UgT3BlcmF0b3JzXHJcbiAgICBCSU5fT1JfVEtOLCAvLyBvclxyXG4gICAgQklOX0FORF9US04sIC8vIGFuZFxyXG4gICAgQklOX1hPUl9US04sIC8vIHhvclxyXG4gICAgQklOX05PVF9US04sIC8vIH5cclxuICAgIEJJTl9TSElGVF9SSUdIVF9US04sIC8vID4+XHJcbiAgICBCSU5fU0hJRlRfQVJJVEhNRVRJQ19SSUdIVF9US04sIC8vID4+PlxyXG4gICAgQklOX1NISUZUX0xFRlRfVEtOLCAvLyA8PFxyXG5cclxuICAgIC8vIEZ1bmMgRGVmc1xyXG4gICAgRlVOQ19NQVBQSU5HX1RLTiwgLy8gKCkgXCItPlwiIHZvaWRcclxuICAgIFJFVFVSTl9US04sXHJcblxyXG4gICAgLy8gT3BlcmF0b3JzXHJcbiAgICBPUF9BRERfVEtOLFxyXG4gICAgT1BfU1VCVFJfVEtOLFxyXG4gICAgT1BfTVVMVF9US04sXHJcbiAgICBPUF9ESVZJREVfVEtOLFxyXG4gICAgT1BfQ0FSUk9UX1RLTixcclxuICAgIE9QX01PRFVMVVNfVEtOLFxyXG4gICAgT1BfQkFSX1RLTixcclxuICAgIE9QX0FERF9BRERfVEtOLFxyXG4gICAgT1BfQUREX0VRVUFMU19US04sXHJcbiAgICBPUF9TVUJUUl9TVUJUUl9US04sXHJcbiAgICBPUF9TVUJUUl9FUVVBTFNfVEtOLFxyXG4gICAgT1BfTVVMVF9FUVVBTFNfVEtOLFxyXG4gICAgT1BfRElWX0VRVUFMU19US04sXHJcblxyXG4gICAgLy9NaXNjZWxsYW5lb3VzXHJcbiAgICBET1VCTEVfUVVPVEVfVEtOLFxyXG4gICAgRE9UX1RLTixcclxuICAgIEVMTElQU0VTX1RLTiwgLy8gZm9yIFthcnJheV0gZG9Tb21ldGhpbmcoLi4uKVxyXG4gICAgQ09NTUFfVEtOLFxyXG4gICAgU0VNSV9DT0xPTl9US04sXHJcbiAgICBVTktOT1dOX1RLTixcclxuICAgIEVORF9US04sXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRva2VuVHlwZTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scuft/lang/TokenType.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/main.ts");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;